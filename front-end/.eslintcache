[{"/Users/kelvindt/lighthouse/echo/front-end/src/index.js":"1","/Users/kelvindt/lighthouse/echo/front-end/src/reportWebVitals.js":"2","/Users/kelvindt/lighthouse/echo/front-end/src/App.jsx":"3","/Users/kelvindt/lighthouse/echo/front-end/src/components/Header.jsx":"4","/Users/kelvindt/lighthouse/echo/front-end/src/components/Navbar.jsx":"5","/Users/kelvindt/lighthouse/echo/front-end/src/components/VideosPage/Videos.jsx":"6","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/Categories.jsx":"7","/Users/kelvindt/lighthouse/echo/front-end/src/components/UserVideosPage/UserVideos.jsx":"8","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/Home.jsx":"9","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditCategories.jsx":"10","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/ShowMoments.jsx":"11","/Users/kelvindt/lighthouse/echo/front-end/src/components/NavbarItem.jsx":"12","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/Save.jsx":"13","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/NewMoment.jsx":"14","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/ListWithEditDelete.jsx":"15","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Button.jsx":"16","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/SearchBar.jsx":"17","/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useApplicationData.js":"18","/Users/kelvindt/lighthouse/echo/front-end/src/api/youtube.js":"19","/Users/kelvindt/lighthouse/echo/front-end/src/components/Register/Register.jsx":"20","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/VideoList.jsx":"21","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Video.jsx":"22","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/MomentBar.jsx":"23","/Users/kelvindt/lighthouse/echo/front-end/src/components/VideoPlayer.jsx":"24","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Login.jsx":"25","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Logout.jsx":"26","/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useVisualMode.js":"27","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategories.jsx":"28","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategoriesList.jsx":"29","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/VideoThumbnails.jsx":"30","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/TogglingEditForm.jsx":"31","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/PasteBar.jsx":"32"},{"size":612,"mtime":1610990898503,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1610678906294,"results":"35","hashOfConfig":"34"},{"size":2292,"mtime":1611242602538,"results":"36","hashOfConfig":"34"},{"size":80,"mtime":1610741729932,"results":"37","hashOfConfig":"34"},{"size":1259,"mtime":1611189931508,"results":"38","hashOfConfig":"34"},{"size":144,"mtime":1611113150316,"results":"39","hashOfConfig":"34"},{"size":597,"mtime":1611157527456,"results":"40","hashOfConfig":"34"},{"size":1042,"mtime":1611189931509,"results":"41","hashOfConfig":"34"},{"size":675,"mtime":1611242602538,"results":"42","hashOfConfig":"34"},{"size":2128,"mtime":1611243395200,"results":"43","hashOfConfig":"34"},{"size":1089,"mtime":1611242602539,"results":"44","hashOfConfig":"34"},{"size":140,"mtime":1610741729934,"results":"45","hashOfConfig":"34"},{"size":1874,"mtime":1611242602539,"results":"46","hashOfConfig":"34"},{"size":250,"mtime":1610741729933,"results":"47","hashOfConfig":"34"},{"size":3049,"mtime":1611243395201,"results":"48","hashOfConfig":"34"},{"size":197,"mtime":1611075554809,"results":"49","hashOfConfig":"34"},{"size":696,"mtime":1611243395201,"results":"50","hashOfConfig":"34"},{"size":5632,"mtime":1611243395202,"results":"51","hashOfConfig":"34"},{"size":234,"mtime":1610907998371,"results":"52","hashOfConfig":"34"},{"size":1712,"mtime":1611215310438,"results":"53","hashOfConfig":"34"},{"size":455,"mtime":1611119816853,"results":"54","hashOfConfig":"34"},{"size":957,"mtime":1611242602540,"results":"55","hashOfConfig":"34"},{"size":1289,"mtime":1611157313454,"results":"56","hashOfConfig":"34"},{"size":1878,"mtime":1611242602540,"results":"57","hashOfConfig":"34"},{"size":1166,"mtime":1611157527459,"results":"58","hashOfConfig":"34"},{"size":231,"mtime":1611157527459,"results":"59","hashOfConfig":"34"},{"size":209,"mtime":1611107989228,"results":"60","hashOfConfig":"34"},{"size":359,"mtime":1611075554805,"results":"61","hashOfConfig":"34"},{"size":1175,"mtime":1611243395200,"results":"62","hashOfConfig":"34"},{"size":956,"mtime":1611157527459,"results":"63","hashOfConfig":"34"},{"size":769,"mtime":1611157527460,"results":"64","hashOfConfig":"34"},{"size":1097,"mtime":1611242602539,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1w2lqaa",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},"/Users/kelvindt/lighthouse/echo/front-end/src/index.js",[],["140","141"],"/Users/kelvindt/lighthouse/echo/front-end/src/reportWebVitals.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/App.jsx",["142","143","144"],"import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n//hooks\nimport useApplicationData from './hooks/useApplicationData';\n\n//local components\nimport Header from './components/Header';\nimport Navbar from './components/Navbar';\nimport Home from './components/HomePage/Home';\nimport UserVideos from './components/UserVideosPage/UserVideos';\nimport Videos from './components/VideosPage/Videos';\nimport Categories from './components/Categories/Categories';\nimport ShowMoments from './components/MomentsPage/ShowMoments';\nimport Register from './components/Register/Register';\nimport Login from './components/Login/Login';\n\n// youtube video components\nimport SearchBar from './components/shared/SearchBar'\nimport VideoList from './components/shared/VideoList'\n\n\nfunction App() {\n\n  const { state, setState, onVideoSelected, onSearch, momentsBySelectedVid } = useApplicationData();\n\n  // const momentPath = `/videos/${state.selectedVideoID}`\n\n    return (\n      <React.StrictMode>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Navbar />\n          {state.userId && <div>user: {state.userId}</div>}\n          <Switch>\n            <Route exact path=\"/\">\n                <Home onSearch={onSearch} onVideoSelected={onVideoSelected} data={state.videoMetaInfo}/>\n            </Route>\n            <Route exact path=\"/videos\">\n              <UserVideos state={state} onVideoSelected={onVideoSelected} selectedVideoID = {state.selectedVideoID}/>\n            </Route>\n            <Route exact path=\"/categories\">\n              <Categories />\n            </Route>\n            <Route exact path=\"/search\">\n              <Videos />\n            </Route>\n            <Route path=\"/moments\">\n                <ShowMoments selectedVideoID = {state.selectedVideoID} momentsBySelectedVid={momentsBySelectedVid} categories={state.categories} />                \n            </Route>\n            <Route exact path=\"/register\">\n              <Register />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n      </React.StrictMode>\n    );\n}\n\n\nexport default App;\n","/Users/kelvindt/lighthouse/echo/front-end/src/components/Header.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Navbar.jsx",["145"],"import { Link } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\n\nimport useApplicationData from '../hooks/useApplicationData';\n\nimport NavbarItem from './NavbarItem';\nimport Logout from './Login/Logout';\n\nimport './stylesheets/Navbar.css';\n\nexport default function Navbar(props) {\n\n  const [cookies, setCookie] = useCookies([\"user\"]);\n\n  const { handleLogout } = useApplicationData();\n\n  return (\n\n    <div className=\"Navbar\">\n      <Link to=\"/\">\n        <NavbarItem>Home</NavbarItem>\n      </Link>\n      <Link to=\"/videos\">\n        <NavbarItem>User videos</NavbarItem>\n      </Link>\n      <Link to=\"/categories\">\n        <NavbarItem>User categories</NavbarItem>\n      </Link>\n      <Link to=\"/search\">\n        <NavbarItem>Search results</NavbarItem>\n      </Link>\n      <Link to=\"/videos/id\">\n        <NavbarItem>Show moments</NavbarItem>\n      </Link>\n      { cookies.user ?\n        <Link to=\"/\">\n          <Logout onClick={handleLogout}>Log out user {cookies.user}</Logout>\n        </Link> :\n        <>\n          <Link to=\"/register\">\n            <NavbarItem>Register</NavbarItem>\n          </Link>\n          <Link to=\"/login\">\n            <NavbarItem>Log in</NavbarItem>\n          </Link>\n        </>\n      }\n    </div>\n\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/VideosPage/Videos.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/Categories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/UserVideosPage/UserVideos.jsx",["146"],"import SearchBar from '../shared/SearchBar';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from \"react-router-dom\";\n\nexport default function UserVideos(props) {\n  \n  const videos = props.state.videos\n  \n  const videoListItem = videos.map((video, index) => {\n    \n    const youtubeId = video.link.slice(32, 43);\n    const thumbnail = `https://img.youtube.com/vi/${youtubeId}/mqdefault.jpg`;\n    const videoOnClick = ()=> {\n      props.onVideoSelected(youtubeId);\n    };\n\n    return (\n      <Link to=\"/videos/id\">\n        <Card key={index} class='userVideos' style={{width: \"30em\"}} onClick={()=>videoOnClick()}>\n          <Card.Header>\n            <h6>{video.title}</h6>\n          </Card.Header>\n          <Card.Img variant=\"bottom\" src={thumbnail} alt=\"thumbnail\" />\n        </Card>\n      </Link>)\n  })\n\n  return (\n    <div className=\"user-videos\">\n      <h4>All User Videos</h4>\n      {/* <SearchBar /> */}\n      <ul>{videoListItem}</ul>\n    </div>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/Home.jsx",["147","148"],"import SearchBar from '../shared/SearchBar';\nimport Button from '../shared/Button';\nimport VideoList from '../shared/VideoList';\nexport default function Home(props) {\n\n  return (\n\n    <div className=\"Home\">\n      <h3>Welcome message</h3>\n      <h3>Another message</h3>\n\n      <SearchBar onSearch={props.onSearch} />\n      <VideoList onVideoSelected={props.onVideoSelected} data={props.data} />\n      <form>\n        <input type=\"text\"></input>\n        <Button>Load video</Button>\n      </form>\n    </div>\n\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditCategories.jsx",["149"],"import { useState } from 'react';\n\nimport Button from '../shared/Button';\nimport List from '../shared/ListWithEditDelete';\nimport TogglingEditForm from '../shared/TogglingEditForm';\nimport Alert from '../shared/Alert';\n\nexport default function EditCategories(props) {\n\n  const [ showForm, setShowForm ] = useState(false);\n  const [ newCat, setNewCat ] = useState(\"\");\n  const [ show, setShow ] = useState(false);\n\n  const handleSave = (name) => {\n\n    console.log('save clicked, new name:', name);\n    setShowForm(false);\n    setShow(true);\n  };\n\n  return (\n    <div className=\"EditCategories\">\n      <h4>Edit categories</h4>\n      <Button onClick={() => setShowForm(true)}>Add category</Button>\n      <Button onClick={props.onBack}>Back</Button>\n      <br/><br/>\n\n      {showForm && (\n        <TogglingEditForm \n          placeholder=\"Insert category name\"\n          name=\"new-category\"\n          onChange={(e) => setNewCat(e.target.value)}\n          onSave={() => handleSave(newCat)}\n          onCancel={() => setShowForm(false)}\n        />\n      )}\n\n      {newCat && (\n        <Alert />\n      )}\n\n      <br/><br/>\n      <List \n        onCateg={true}\n        onDelete={() => console.log('delete clicked')}\n      >\n        {props.children}\n      </List>\n      {newCat && (\n        <div className=\"List\">\n          {newCat} <Button>Edit</Button><Button>Delete</Button>\n        </div>\n      )}\n    </div>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/ShowMoments.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/NavbarItem.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/Save.jsx",["150","151","152"],"import Button from '../shared/Button';\n\nexport default function Save(props) {\n\n  return (\n    <div className=\"Save\">\n      <h4>This will be a modal/popup when saving the video</h4>\n      <Button>Save video</Button>\n      <form>\n        <p>Video title:</p><input type=\"text\"></input>\n        <p>Category:</p><input type=\"text\"></input>\n      </form>\n    </div>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/NewMoment.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/ListWithEditDelete.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Button.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/SearchBar.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useApplicationData.js",["153"],"import {\n  useState,\n  useEffect\n} from 'react';\n\n//use cookies hook\nimport { useCookies } from \"react-cookie\";\n\nimport axios from 'axios';\n\nimport youtubeApi from '../api/youtube';\n\nconst useApplicationData = () => {\n\n  //initial state\n  const [state, setState] = useState({\n    users: [],\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    error: '',\n    redirect: null,\n    videoMetaInfo: [],\n    selectedVideoID: null,\n    startTime: 70,\n    endTime: 100,\n    videoDuration: null\n  });\n\n  //set initial cookie\n  const [cookies, setCookie, removeCookie] = useCookies([\"user\"]);\n\n  //extracts all users from the DB + connected videos and categories\n  useEffect(() => {\n\n    //stops the axios calls from happening when user is not logged in\n    if (!cookies.user) {\n      return null;\n    }\n\n    //promise.all to call all data we need at the same time\n    Promise.all([\n      axios.get('api/categories'),\n      axios.get('api/users')\n    ])\n    .then(all => {\n\n      //'all' comes back as an array of responses from the axios calls\n      // console.log('users:', all[1].data)\n      console.log('categs+ids:', all[0].data.filteredCategsWithId)\n      // console.log('categs:', all[0].data.categNames)\n      // console.log('videos:', all[0].data.response)\n      \n      //set current state with axios calls data\n      setState(prev => ({...prev, users: all[1].data, categories: all[0].data.categNames, categWitIds: all[0].data.filteredCategsWithId, videos: all[0].data.response }))\n      \n    })\n    .catch((err) => console.log(err));\n\n  }, [cookies.user]);   //<-- only renders when user is present\n\n  //handles input from log in and register forms dynamically\n  const handleFormChange = event => {\n\n    const input = event.target.value;\n    const fieldName = event.target.name;\n\n    setState({\n      ...state,\n      [fieldName]: input\n    });\n\n  };\n\n  const handleRegisterSubmit = () => {\n    \n    //deconstruct values needed from state\n    const { firstName, lastName, email, password, errors } = state;\n    let validForm = true;\n    \n    //if any of the inputs are empty, set error state\n    if (!firstName || !lastName || !email || !password) {\n\n      validForm = false;\n      setState({...state, error: 'Fields cannot be empty!'});\n\n    }\n\n    if (validForm) {\n      //reset error state\n      setState({...state, error: ''});\n\n      //build input object to send to back-end\n      const userInput = {\n        firstName,\n        lastName,\n        email,\n        password\n      };\n\n      //send data to back-end\n      return axios.post('http://localhost:3001/register', { userInput })\n        .then(response => {\n\n            //if server sends response.msg, user exists in DB\n            const userExists = response.data.msg\n\n            //if user exists set state error\n            if (userExists) {\n              setState({...state, error: userExists});\n\n            } else {\n              console.log('user created, id:', response.data.id);\n              setCookie(\"user\", response.data.id, {\n                path: \"/\"\n              });\n              setState({...state, redirect: '/'});\n            }\n        })\n        .catch(err => {console.log(err)})\n    }\n  }\n\n  const handleLoginSubmit = () => {\n    \n    //deconstruct values needed from state\n    const { email, password } = state;\n    let validForm = true;\n    \n    //if any of the inputs are empty, set error state\n    if (!email || !password) {\n\n      validForm = false;\n      setState({...state, error: 'Fields cannot be empty!'});\n\n    }\n\n    if (validForm) {\n      //reset error state\n      setState({...state, error: ''});\n\n      //build input object to send to back-end\n      const loginInput = {\n        email,\n        password\n      };\n\n      //send data to back-end\n      return axios.post('http://localhost:3001/login', { loginInput })\n        .then(response => {\n\n            //if server sends response.msg, user exists in DB\n            const noUser = response.data.msg\n\n            //if user exists set state error\n            if (noUser) {\n              setState({...state, error: noUser});\n\n            } else {\n\n              console.log('user logged in, id:', response.data.id);\n              setCookie(\"user\", response.data.id, {\n                path: \"/\"\n              });\n              setState({...state, redirect: '/'});\n            }\n        })\n        .catch(err => {console.log('error:', err)})\n    }\n  }\n\n  const handleLogout = () => {\n    //reset cookie when user logs out\n    removeCookie(\"user\", { path: \"/\"});\n    console.log('user logged out');\n  }\n\n  const onVideoSelected = videoId => {\n    setState({\n      ...state,\n      selectedVideoID:videoId\n    })\n  }\n\n  const onSearch = async keyword => {\n    const response = await youtubeApi.get(\"/search\",{\n      params:{\n        q:keyword\n      }\n    })\n\n    console.log(response.data)\n\n    setState({\n      ...state,\n      videoMetaInfo: response.data.items,\n      selectedVideoID: response.data.items[0].id.videoId\n    })\n\n    console.log(state)\n  }\n\n  const momentsBySelectedVid = (selectedVideoID) => {\n    \n    console.log(\"COOKIE\", cookies.user)\n\n\n    if(selectedVideoID) {\n      axios.get('http://localhost:3001/api/moments/', {\n        params: {selectedVideoID},\n        withCredentials: true\n      })\n      .then((response)=>{\n        console.log(\"USEapp\",response)\n        console.log('info sent to backend')\n\n        //setState({..state, myInfo: content})\n      })\n      .catch(err => console.log(err));\n    }\n  };\n  \n  return { state, handleFormChange, handleRegisterSubmit, handleLoginSubmit, onVideoSelected, onSearch, handleLogout, setState, momentsBySelectedVid }\n\n};\n\nexport default useApplicationData;","/Users/kelvindt/lighthouse/echo/front-end/src/api/youtube.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Register/Register.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/VideoList.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Video.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/MomentBar.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/VideoPlayer.jsx",["154"],"import YouTube from 'react-youtube';\n\n\nexport default function YTplayer(props) {\n  \n  const videoOnReady=(event) =>{\n    // access to player in all event handlers via event.target\n    const player = event.target;\n    \n    player.setLoop(true)\n    console.log(\"Video Duration\",player.getDuration())\n    let vd = player.getDuration()\n    props.setVideoInfo(prev=>({...prev, duration: vd}))\n  }\n  const videoOnPlay=(event) =>{\n    // access to player in all event handlers via event.target\n    const player = event.target;\n  }\n\n  const videoOnEnd=(event) =>{\n    // access to player in all event handlers via event.target\n    const player = event.target;\n    player.seekTo(props.videoInfo.startTime)\n    player.playVideo(); \n  }\n\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n      start: props.videoInfo.startTime,\n      end: props.videoInfo.endTime\n\n    },\n  };\n  \n  return ( \n    <YouTube \n      videoId={props.videoInfo.selectedVideoID} \n      opts={opts} \n      onReady={videoOnReady}\n      onPlay={videoOnPlay}\n      onEnd={videoOnEnd}\n    />\n  );\n}\n","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Login.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Logout.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useVisualMode.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategoriesList.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/VideoThumbnails.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/TogglingEditForm.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/PasteBar.jsx",["155","156"],"import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\";\n\nimport useApplicationData from '../../hooks/useApplicationData';\n\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button';\n\nexport default function PasteBar(props){\n  const [url, setUrl] = useState('');\n\n  const { state, setState } = useApplicationData();\n\n  const onSubmit = event => {\n    event.preventDefault()\n    \n    const youtubeId = url.slice(32, 43);\n\n    setState(prev => ({...prev, selectedVideoID: youtubeId}));\n    console.log(url)\n    \n  }\n\n  const onInput = event => {\n    const input = event.target.value\n\n    console.log(input)\n\n    setUrl(input)\n  }\n\n  return (\n\n    <InputGroup onChange={onInput} className=\"paste_bar\">\n      <FormControl\n        placeholder=\"Paste Video Link\"\n        aria-label=\"Video Urls\"\n      />\n      <InputGroup.Append>\n        <Button type=\"submit\" value={url} variant=\"outline-secondary\" onSubmit={onSubmit} >Click</Button>\n      </InputGroup.Append>\n    </InputGroup>\n  )\n}",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":26,"column":8,"nodeType":"163","messageId":"164","endLine":26,"endColumn":17},{"ruleId":"161","severity":1,"message":"165","line":27,"column":8,"nodeType":"163","messageId":"164","endLine":27,"endColumn":17},{"ruleId":"161","severity":1,"message":"166","line":32,"column":18,"nodeType":"163","messageId":"164","endLine":32,"endColumn":26},{"ruleId":"161","severity":1,"message":"167","line":13,"column":19,"nodeType":"163","messageId":"164","endLine":13,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":1,"column":8,"nodeType":"163","messageId":"164","endLine":1,"endColumn":17},{"ruleId":"161","severity":1,"message":"168","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":18},{"ruleId":"161","severity":1,"message":"169","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":19},{"ruleId":"161","severity":1,"message":"170","line":12,"column":11,"nodeType":"163","messageId":"164","endLine":12,"endColumn":15},{"ruleId":"161","severity":1,"message":"171","line":1,"column":20,"nodeType":"163","messageId":"164","endLine":1,"endColumn":29},{"ruleId":"161","severity":1,"message":"172","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":22},{"ruleId":"173","severity":1,"message":"174","line":20,"column":96,"nodeType":"175","messageId":"176","endLine":20,"endColumn":98},{"ruleId":"161","severity":1,"message":"177","line":79,"column":51,"nodeType":"163","messageId":"164","endLine":79,"endColumn":57},{"ruleId":"161","severity":1,"message":"178","line":25,"column":11,"nodeType":"163","messageId":"164","endLine":25,"endColumn":17},{"ruleId":"161","severity":1,"message":"179","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"180","line":13,"column":11,"nodeType":"163","messageId":"164","endLine":13,"endColumn":16},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","'VideoList' is defined but never used.","'setState' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'show' is assigned a value but never used.","'useEffect' is defined but never used.","'DropdownButton' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'errors' is assigned a value but never used.","'player' is assigned a value but never used.","'Link' is defined but never used.","'state' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]