[{"/Users/kelvindt/lighthouse/echo/front-end/src/index.js":"1","/Users/kelvindt/lighthouse/echo/front-end/src/reportWebVitals.js":"2","/Users/kelvindt/lighthouse/echo/front-end/src/App.jsx":"3","/Users/kelvindt/lighthouse/echo/front-end/src/components/Header.jsx":"4","/Users/kelvindt/lighthouse/echo/front-end/src/components/Navbar.jsx":"5","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/Categories.jsx":"6","/Users/kelvindt/lighthouse/echo/front-end/src/components/UserVideosPage/UserVideos.jsx":"7","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/Home.jsx":"8","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditCategories.jsx":"9","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/ShowMoments.jsx":"10","/Users/kelvindt/lighthouse/echo/front-end/src/components/NavbarItem.jsx":"11","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/Save.jsx":"12","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/NewMoment.jsx":"13","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Button.jsx":"14","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/SearchBar.jsx":"15","/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useApplicationData.js":"16","/Users/kelvindt/lighthouse/echo/front-end/src/api/youtube.js":"17","/Users/kelvindt/lighthouse/echo/front-end/src/components/Register/Register.jsx":"18","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/VideoList.jsx":"19","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Video.jsx":"20","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/MomentBar.jsx":"21","/Users/kelvindt/lighthouse/echo/front-end/src/components/VideoPlayer.jsx":"22","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Login.jsx":"23","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Logout.jsx":"24","/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useVisualMode.js":"25","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategories.jsx":"26","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategoriesList.jsx":"27","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/VideoThumbnails.jsx":"28","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/TogglingEditForm.jsx":"29","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/PasteBar.jsx":"30","/Users/kelvindt/lighthouse/echo/front-end/src/components/SearchResults/Videos.jsx":"31","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditDeleteListCategs.jsx":"32","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/AutoButton.jsx":"33","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/MomentsList.jsx":"34"},{"size":656,"mtime":1611512224320,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1610678906294,"results":"37","hashOfConfig":"36"},{"size":2749,"mtime":1611512224308,"results":"38","hashOfConfig":"36"},{"size":355,"mtime":1611512224309,"results":"39","hashOfConfig":"36"},{"size":1130,"mtime":1611512224311,"results":"40","hashOfConfig":"36"},{"size":832,"mtime":1611443456713,"results":"41","hashOfConfig":"36"},{"size":2799,"mtime":1611587796520,"results":"42","hashOfConfig":"36"},{"size":571,"mtime":1611543152390,"results":"43","hashOfConfig":"36"},{"size":1976,"mtime":1611355298200,"results":"44","hashOfConfig":"36"},{"size":3372,"mtime":1611595388198,"results":"45","hashOfConfig":"36"},{"size":140,"mtime":1610741729934,"results":"46","hashOfConfig":"36"},{"size":5333,"mtime":1611601644241,"results":"47","hashOfConfig":"36"},{"size":2705,"mtime":1611595756915,"results":"48","hashOfConfig":"36"},{"size":223,"mtime":1611422083964,"results":"49","hashOfConfig":"36"},{"size":1384,"mtime":1611512684014,"results":"50","hashOfConfig":"36"},{"size":5948,"mtime":1611601450197,"results":"51","hashOfConfig":"36"},{"size":236,"mtime":1611543452179,"results":"52","hashOfConfig":"36"},{"size":2339,"mtime":1611551008443,"results":"53","hashOfConfig":"36"},{"size":521,"mtime":1611543354690,"results":"54","hashOfConfig":"36"},{"size":1407,"mtime":1611543672580,"results":"55","hashOfConfig":"36"},{"size":1288,"mtime":1611512224312,"results":"56","hashOfConfig":"36"},{"size":2295,"mtime":1611588345157,"results":"57","hashOfConfig":"36"},{"size":1511,"mtime":1611586229684,"results":"58","hashOfConfig":"36"},{"size":231,"mtime":1611157527459,"results":"59","hashOfConfig":"36"},{"size":209,"mtime":1611107989228,"results":"60","hashOfConfig":"36"},{"size":533,"mtime":1611443456714,"results":"61","hashOfConfig":"36"},{"size":1258,"mtime":1611443456714,"results":"62","hashOfConfig":"36"},{"size":1284,"mtime":1611443456715,"results":"63","hashOfConfig":"36"},{"size":713,"mtime":1611523895938,"results":"64","hashOfConfig":"36"},{"size":1063,"mtime":1611588370189,"results":"65","hashOfConfig":"36"},{"size":144,"mtime":1611293681967,"results":"66","hashOfConfig":"36"},{"size":4350,"mtime":1611355298200,"results":"67","hashOfConfig":"36"},{"size":818,"mtime":1611523191180,"results":"68","hashOfConfig":"36"},{"size":2880,"mtime":1611523895936,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1w2lqaa",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},"/Users/kelvindt/lighthouse/echo/front-end/src/index.js",[],["146","147"],"/Users/kelvindt/lighthouse/echo/front-end/src/reportWebVitals.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/App.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Header.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Navbar.jsx",["148"],"import { Link } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\n\nimport useApplicationData from '../hooks/useApplicationData';\n\nimport NavbarItem from './NavbarItem';\nimport Logout from './Login/Logout';\n\nimport './stylesheets/Navbar.css';\n\nexport default function Navbar(props) {\n\n  const [cookies, setCookie] = useCookies([\"user\"]);\n\n  const { handleLogout } = useApplicationData();\n\n  return (\n\n    <div className=\"Navbar\">\n      <Link to=\"/\">\n        <NavbarItem>Home</NavbarItem>\n      </Link>\n      <Link to=\"/videos\">\n        <NavbarItem>User videos</NavbarItem>\n      </Link>\n      <Link to=\"/categories\">\n        <NavbarItem>User categories</NavbarItem>\n      </Link>\n      <Link to=\"/search\">\n        <NavbarItem>Search results</NavbarItem>\n      </Link>\n      {/* <Link to=\"/videos/id\">\n        <NavbarItem>Show moments</NavbarItem>\n      </Link> */}\n      { cookies.user ?\n        <Link to=\"/\">\n          <Logout onClick={handleLogout}>Log out user {cookies.user}</Logout>\n        </Link> :\n        <>\n          <Link to=\"/register\">\n            <NavbarItem>Register</NavbarItem>\n          </Link>\n          <Link to=\"/login\">\n            <NavbarItem>Log in</NavbarItem>\n          </Link>\n        </>\n      }\n    </div>\n\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/Categories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/UserVideosPage/UserVideos.jsx",["149"],"/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/Home.jsx",["150"],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditCategories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/ShowMoments.jsx",["151","152"],"/Users/kelvindt/lighthouse/echo/front-end/src/components/NavbarItem.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/Save.jsx",["153","154","155","156","157"],"/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/NewMoment.jsx",["158","159"],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Button.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/SearchBar.jsx",["160"],"import React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nexport default function SearchBar(props){\n  const [state, setState] = useState({\n    title: ''\n  })\n\n  const onSearchChanged = event => {\n    const _title = event.target.value\n\n    console.log(_title)\n\n    setState({title: _title})\n  }\n\n  const onSubmit = event => {\n    event.preventDefault()\n\n    console.log(state.title)\n\n    props.onSearch(state.title)\n  }\n\n  return (\n    // <div>\n    // <form onSubmit={onSubmit}>\n    //   <div className=\"form-controls\">\n    //     <label>Search</label>\n    //     <input value={state.title} onChange={onSearchChanged} id=\"video-search\" type=\"text\" placeholder=\"Enter Search Keyword\"></input>\n    //   </div>\n    // </form>\n\n    <Form onSubmit={onSubmit}>\n      <InputGroup onChange={onSearchChanged} className=\"form-controls\" id=\"video-search\">\n        <FormControl\n          placeholder=\"Enter Search Keyword\"\n          aria-label=\"Search\"\n        />\n        <InputGroup.Append>\n          <Button type=\"submit\" value={state.title} variant=\"outline-secondary\" >Search</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </Form>\n  // </div>\n\n  \n  )\n}\n\n","/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useApplicationData.js",["161"],"/Users/kelvindt/lighthouse/echo/front-end/src/api/youtube.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Register/Register.jsx",["162"],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/VideoList.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Video.jsx",["163"],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/MomentBar.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/VideoPlayer.jsx",["164"],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Login.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Logout.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useVisualMode.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategoriesList.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/VideoThumbnails.jsx",["165","166","167","168","169"],"import { useState } from 'react';\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\n\nexport default function VideoThumbnails(props) {\n\n  const { state, setState, onVideoSelected } = props;\n  let history = useHistory();\n\n  const thumbnails = state.videos\n    .filter(video => video.cat_name === props.category)\n    .map((video, i) => {\n      \n      const youtubeId = video.link.slice(32, 43);\n      const thumbnail = `https://img.youtube.com/vi/${youtubeId}/mqdefault.jpg`;\n\n      const videoOnClick = () => {\n        // props.onVideoSelected(youtubeId);\n        setState((prev) => ({ ...prev, oldVideo: true, selectedVidId: youtubeId }));\n        history.push('/moments', { update: true })\n\n      };\n  \n\n      //render each video detail\n      return (\n          <Card key={i} style={{width: \"30em\"}} onClick={()=> videoOnClick()} >\n            {/* <Link to=\"/moments\"> */}\n              <Card.Header>\n                <h6>{video.title}</h6>\n              </Card.Header>\n              <Card.Img variant=\"bottom\" src={thumbnail} alt=\"thumbnail\" />\n            {/* </Link> */}\n          </Card>\n      )\n  });\n\n  //render list based on videos existence\n  return (\n      <div className=\"VideoThumbnails\">\n        {thumbnails.length > 0 ? thumbnails : <p>Category empty, add some videos to see them here!</p>}\n      </div>\n  )\n};","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/TogglingEditForm.jsx",["170"],"import { useState } from 'react';\n\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport Button from './Button';\n\nexport default function TogglingEditForm(props) {\n\n  return (\n\n    <InputGroup className=\"mb-3\">\n      <FormControl\n        aria-describedby=\"basic-addon2\"\n        placeholder={props.placeholder}\n        value={props.value}\n        name={props.name}\n        onChange={props.onChange}\n      />\n      <InputGroup.Append>\n        <Button variant=\"outline-secondary\" onClick={props.onSave}>Save</Button>\n        <Button variant=\"outline-secondary\" onClick={props.onCancel}>Cancel</Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n};","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/PasteBar.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/SearchResults/Videos.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditDeleteListCategs.jsx",["171"],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Alert from 'react-bootstrap/Alert';\n\nimport Button from '../shared/Button';\nimport TogglingEditForm from '../shared/TogglingEditForm';\n\nexport default function List(props) {\n\n  //using app data state to get categories\n  const { state, setState } = props;\n\n  //keeping edit form state local to avoid too much rendering\n  const [catName, setCatName] = useState(\"\");\n  const [editMode, setEditMode] = useState(null);\n\n  //sets edit mode to current form and value to name extracted from state\n  const setMode = (i, cat) => {\n    setEditMode(i);\n    setCatName(cat);\n  };\n\n  //state of delete alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertCateg, setAlertCateg] = useState(null);\n\n  const handleSave = (newValue, oldValue) => {\n\n    //shallow copy of state categories\n    const categ = [...state.categories];\n    const categWithIds = [...state.categWithId];\n\n    //get index of value being changed\n    const oldIndex = categ.indexOf(oldValue);\n\n    //change old value at index with new value\n    categ[oldIndex] = newValue;\n\n    //set state to new list of categories\n    setState({ ...state, categories: categ });\n\n    //extract id of current category to pass to back-end\n    let id;\n    categWithIds.forEach(item => {\n\n      if(item.name === oldValue) {\n        id = item.id;\n      }\n    })\n\n    //send new name and index to back-end\n    return axios.put('http://localhost:3001/api/categories', { newValue, id })\n      .then(response => {\n        setEditMode(null);\n\n        console.log('client says: updated cat name sent');\n        console.log(response.data);\n      })\n      .catch(err => { console.log('error:', err) })\n\n  };\n\n  const handleDelete = (categName) => {\n    setShowAlert(false);\n\n    //shallow copy of categories with ids\n    const categWithIds = [...state.categWithId];\n    console.log('categWithIds :', categWithIds);\n\n    //extract id of current category to pass to back-end\n    //!!on refactor of code, this can be moved into a helper!!\n    let id;\n    categWithIds.forEach(item => {\n      console.log('item :', item.name);\n      console.log('categName :', categName);\n      \n      \n      if(item.name === categName) {\n        id = item.id;\n      }\n    })\n    console.log('id :', id);\n\n\n    //send data to back-end\n    return axios.delete('http://localhost:3001/api/categories', { data: { id } })\n      .then(response => {\n        console.log('client says: delete request sent');\n        console.log(response.data);\n        setState({...state, categories: state.categories.filter(categ => !categ.includes(categName))})\n      })\n      .catch(err => { console.log('error:', err) })\n\n  };\n\n  const handleAlert = (categName) => {\n    setAlertCateg(categName);\n    setShowAlert(true);\n  };\n\n  const categoriesList = state.categories && state.categories.map((name, i) => {\n\n    return (\n\n      <div key={i}>\n        {/* show category name when edit mode is not active for current element */}\n        {editMode !== i && name}\n        {/* on edit mode active for current element show edit form */}\n        {editMode === i ? (\n          <TogglingEditForm\n            value={catName}\n            name=\"cat-name\"\n            placeholder=\"Category name\"\n            onCancel={() => setEditMode(null)}\n            onChange={(e) => setCatName(e.target.value)}\n            onSave={(e) => handleSave(catName, name)}\n          />\n        ) :\n          // else show the buttons\n          (<>\n            <Button onClick={() => setMode(i, name)} children={'Edit'} />\n            {!showAlert && <Button onClick={() => handleAlert(name)}>Delete</Button>}\n          </>)\n        }\n      </div>\n    );\n\n  });\n\n  return (\n    <>\n      <>\n        <Alert show={showAlert} variant=\"danger\" style={{width: \"20em\"}}>\n          <Alert.Heading>Delete category</Alert.Heading>\n          <p>\n            Deleting category cannot be undone. Proceed?\n          </p>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n            <Button onClick={() => setShowAlert(false)}>Cancel</Button>\n            <Button onClick={() => handleDelete(alertCateg)} variant=\"outline-danger\">\n              Proceed\n          </Button>\n          </div>\n        </Alert>\n      </>\n      <div className=\"List\">\n        {categoriesList}\n      </div>\n    </>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/AutoButton.jsx",["172"],"import React, { useState } from 'react';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react';\n\nexport default function SwitchButton(props) {\n  const { setVideoInfo } = props;\n  const [toggle, setToggle] = useState(true);\n  const [ckecked, setChecked] = useState(true)\n\n  const handleOnChange = () => {\n    if(toggle){\n      setToggle(false);\n      setChecked(true);\n      setVideoInfo((prev)=>({...prev, loop: 1}));\n      console.log(\"ON\")\n    }\n    if(!toggle){\n      setToggle(true);\n      setChecked(false);\n      setVideoInfo((prev)=>({...prev, loop: 0}));\n      console.log(\"OFF\")\n    }\n  };\n\n  return (\n\n    <BootstrapSwitchButton\n      // checked={ckecked}\n      onlabel='AUTO'\n      offlabel='OFF'\n      onChange={() => handleOnChange()}\n      onstyle=\"success\"\n    />\n\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/MomentsList.jsx",["173","174","175","176","177","178","179"],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Alert from 'react-bootstrap/Alert';\n\nimport Button from '../shared/Button';\nimport TogglingEditForm from '../shared/TogglingEditForm';\n\nexport default function List(props) {\n\n  const { videoInfo, setVideoInfo, state, setState } = props;\n  const moments = videoInfo.moments;\n\n  //state for the selected moment\n  const [ momName, setMomName ] = useState(\"\");\n\n  //state of delete alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMom, setAlertMom] = useState(null);\n\n  const handleDelete = (momName) => {\n    \n    setShowAlert(false);\n\n    //find moment that is being changed and extract its id\n    const deleted = moments.filter(moment => moment.label === momName)[0];\n    const id = deleted.moment_id;\n\n    //create updated array for back-end\n    const newMoments = moments.filter(moment => moment.moment_id !== id)\n\n    setVideoInfo({...videoInfo, moments: moments.filter(moment => moment.moment_id !== id)})\n\n    //send data to back-end\n    return axios.delete('http://localhost:3001/api/moments', { data: { id } })\n      .then(response => {\n        console.log('client says: delete request sent');\n        console.log(response.data);\n\n      })\n      .catch(err => { console.log('error:', err) })\n\n  };\n\n  const handleAlert = momName => {\n    setAlertMom(momName);\n    setShowAlert(true);\n  };\n\n  const handlePlay = (start, end) => {\n    setVideoInfo({...videoInfo, startTime: start, endTime: end})\n  };\n\n  //convert seconds to human readable times\n  const hrTime = seconds => {\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\n  };\n\n  //render list of moments dynamically\n  const momentsList = moments.map(moment => {\n\n    const key = moment.moment_id;\n    const name = moment.label;\n    const start = hrTime(moment.start_time);\n    const end = hrTime(moment.end_time);\n\n    return (\n\n      <div key={key} style={{border: \"1px solid gray\", padding: \".5em\"}}>\n        <h6>{name}:  {start} - {end}</h6>\n        <Button onClick={() => handlePlay(moment.start_time, moment.end_time)}>Play</Button>\n        <Button onClick={() => handleAlert(name)}>Delete</Button>\n      </div>\n    );\n\n  });\n\n  return (\n    <>\n      <br /><br />\n      <>\n        <Alert show={showAlert} variant=\"danger\" style={{width: \"20em\"}}>\n          <Alert.Heading>Delete moment</Alert.Heading>\n          <p>\n            Deleting moment cannot be undone. Proceed?\n          </p>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n            <Button onClick={() => setShowAlert(false)}>Cancel</Button>\n            <Button onClick={() => handleDelete(alertMom)} variant=\"outline-danger\">\n              Proceed\n          </Button>\n          </div>\n        </Alert>\n      </>\n      <div className=\"List\">\n        {momentsList}\n      </div>\n      <br /><br />\n    </>\n  );\n}",{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":13,"column":19,"nodeType":"186","messageId":"187","endLine":13,"endColumn":28},{"ruleId":"184","severity":1,"message":"188","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":17},{"ruleId":"184","severity":1,"message":"189","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":14},{"ruleId":"184","severity":1,"message":"190","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":14},{"ruleId":"191","severity":1,"message":"192","line":81,"column":6,"nodeType":"193","endLine":81,"endColumn":29,"suggestions":"194"},{"ruleId":"184","severity":1,"message":"195","line":21,"column":19,"nodeType":"186","messageId":"187","endLine":21,"endColumn":29},{"ruleId":"184","severity":1,"message":"196","line":24,"column":7,"nodeType":"186","messageId":"187","endLine":24,"endColumn":14},{"ruleId":"184","severity":1,"message":"197","line":34,"column":22,"nodeType":"186","messageId":"187","endLine":34,"endColumn":35},{"ruleId":"198","severity":1,"message":"199","line":60,"column":17,"nodeType":"200","messageId":"201","endLine":60,"endColumn":19},{"ruleId":"202","severity":1,"message":"203","line":103,"column":29,"nodeType":"204","messageId":"205","endLine":103,"endColumn":73,"fix":"206"},{"ruleId":"184","severity":1,"message":"207","line":11,"column":56,"nodeType":"186","messageId":"187","endLine":11,"endColumn":61},{"ruleId":"184","severity":1,"message":"208","line":11,"column":63,"nodeType":"186","messageId":"187","endLine":11,"endColumn":71},{"ruleId":"184","severity":1,"message":"209","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":20},{"ruleId":"184","severity":1,"message":"210","line":86,"column":51,"nodeType":"186","messageId":"187","endLine":86,"endColumn":57},{"ruleId":"184","severity":1,"message":"211","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":18},{"ruleId":"212","severity":1,"message":"213","line":23,"column":50,"nodeType":"214","messageId":"215","endLine":23,"endColumn":52},{"ruleId":"184","severity":1,"message":"216","line":34,"column":11,"nodeType":"186","messageId":"187","endLine":34,"endColumn":17},{"ruleId":"184","severity":1,"message":"217","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":18},{"ruleId":"184","severity":1,"message":"218","line":1,"column":20,"nodeType":"186","messageId":"187","endLine":1,"endColumn":29},{"ruleId":"184","severity":1,"message":"208","line":7,"column":18,"nodeType":"186","messageId":"187","endLine":7,"endColumn":26},{"ruleId":"184","severity":1,"message":"219","line":7,"column":28,"nodeType":"186","messageId":"187","endLine":7,"endColumn":43},{"ruleId":"184","severity":1,"message":"220","line":7,"column":45,"nodeType":"186","messageId":"187","endLine":7,"endColumn":60},{"ruleId":"184","severity":1,"message":"217","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":18},{"ruleId":"184","severity":1,"message":"218","line":1,"column":20,"nodeType":"186","messageId":"187","endLine":1,"endColumn":29},{"ruleId":"184","severity":1,"message":"221","line":7,"column":10,"nodeType":"186","messageId":"187","endLine":7,"endColumn":17},{"ruleId":"184","severity":1,"message":"218","line":1,"column":20,"nodeType":"186","messageId":"187","endLine":1,"endColumn":29},{"ruleId":"184","severity":1,"message":"222","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":24},{"ruleId":"184","severity":1,"message":"207","line":10,"column":36,"nodeType":"186","messageId":"187","endLine":10,"endColumn":41},{"ruleId":"184","severity":1,"message":"208","line":10,"column":43,"nodeType":"186","messageId":"187","endLine":10,"endColumn":51},{"ruleId":"184","severity":1,"message":"223","line":14,"column":11,"nodeType":"186","messageId":"187","endLine":14,"endColumn":18},{"ruleId":"184","severity":1,"message":"224","line":14,"column":20,"nodeType":"186","messageId":"187","endLine":14,"endColumn":30},{"ruleId":"184","severity":1,"message":"225","line":29,"column":11,"nodeType":"186","messageId":"187","endLine":29,"endColumn":21},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar","'SearchBar' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.oldVideo' and 'videoInfo.selectedVideoID'. Either include them or remove the dependency array.","ArrayExpression",["228"],"'setCookies' is assigned a value but never used.","'history' is assigned a value but never used.","'setCategoryId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-whitespace-before-property","Unexpected whitespace before property slice.","MemberExpression","unexpectedWhitespace",{"range":"229","text":"230"},"'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'useHistory' is defined but never used.","'errors' is assigned a value but never used.","'InputGroup' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'player' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'onVideoSelected' is assigned a value but never used.","'selectedVideoID' is assigned a value but never used.","'ckecked' is assigned a value but never used.","'TogglingEditForm' is defined but never used.","'momName' is assigned a value but never used.","'setMomName' is assigned a value but never used.","'newMoments' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},[3192,3194],".","Update the dependencies array to be: [props.oldVideo, videoInfo.selectedCat, videoInfo.selectedVideoID]",{"range":"233","text":"234"},[2247,2270],"[props.oldVideo, videoInfo.selectedCat, videoInfo.selectedVideoID]"]