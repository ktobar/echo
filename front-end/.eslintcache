[{"/Users/kelvindt/lighthouse/echo/front-end/src/index.js":"1","/Users/kelvindt/lighthouse/echo/front-end/src/reportWebVitals.js":"2","/Users/kelvindt/lighthouse/echo/front-end/src/App.jsx":"3","/Users/kelvindt/lighthouse/echo/front-end/src/components/Header.jsx":"4","/Users/kelvindt/lighthouse/echo/front-end/src/components/Navbar.jsx":"5","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/Categories.jsx":"6","/Users/kelvindt/lighthouse/echo/front-end/src/components/UserVideosPage/UserVideos.jsx":"7","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/Home.jsx":"8","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditCategories.jsx":"9","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/ShowMoments.jsx":"10","/Users/kelvindt/lighthouse/echo/front-end/src/components/NavbarItem.jsx":"11","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/Save.jsx":"12","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/NewMoment.jsx":"13","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/ListWithEditDelete.jsx":"14","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Button.jsx":"15","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/SearchBar.jsx":"16","/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useApplicationData.js":"17","/Users/kelvindt/lighthouse/echo/front-end/src/api/youtube.js":"18","/Users/kelvindt/lighthouse/echo/front-end/src/components/Register/Register.jsx":"19","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/VideoList.jsx":"20","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Video.jsx":"21","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/MomentBar.jsx":"22","/Users/kelvindt/lighthouse/echo/front-end/src/components/VideoPlayer.jsx":"23","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Login.jsx":"24","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Logout.jsx":"25","/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useVisualMode.js":"26","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategories.jsx":"27","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategoriesList.jsx":"28","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/VideoThumbnails.jsx":"29","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/TogglingEditForm.jsx":"30","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/PasteBar.jsx":"31","/Users/kelvindt/lighthouse/echo/front-end/src/components/SearchResults/Videos.jsx":"32"},{"size":612,"mtime":1610990898503,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1610678906294,"results":"35","hashOfConfig":"34"},{"size":2336,"mtime":1611332894947,"results":"36","hashOfConfig":"34"},{"size":80,"mtime":1610741729932,"results":"37","hashOfConfig":"34"},{"size":1259,"mtime":1611291702656,"results":"38","hashOfConfig":"34"},{"size":597,"mtime":1611157527456,"results":"39","hashOfConfig":"34"},{"size":1043,"mtime":1611332894949,"results":"40","hashOfConfig":"34"},{"size":612,"mtime":1611299357042,"results":"41","hashOfConfig":"34"},{"size":2329,"mtime":1611333594756,"results":"42","hashOfConfig":"34"},{"size":2209,"mtime":1611332894948,"results":"43","hashOfConfig":"34"},{"size":140,"mtime":1610741729934,"results":"44","hashOfConfig":"34"},{"size":4109,"mtime":1611332894948,"results":"45","hashOfConfig":"34"},{"size":250,"mtime":1610741729933,"results":"46","hashOfConfig":"34"},{"size":4972,"mtime":1611293681955,"results":"47","hashOfConfig":"34"},{"size":197,"mtime":1611075554809,"results":"48","hashOfConfig":"34"},{"size":700,"mtime":1611262322466,"results":"49","hashOfConfig":"34"},{"size":5915,"mtime":1611332894949,"results":"50","hashOfConfig":"34"},{"size":234,"mtime":1610907998371,"results":"51","hashOfConfig":"34"},{"size":1712,"mtime":1611215310438,"results":"52","hashOfConfig":"34"},{"size":455,"mtime":1611299361877,"results":"53","hashOfConfig":"34"},{"size":957,"mtime":1611242602540,"results":"54","hashOfConfig":"34"},{"size":1289,"mtime":1611157313454,"results":"55","hashOfConfig":"34"},{"size":1878,"mtime":1611242602540,"results":"56","hashOfConfig":"34"},{"size":1166,"mtime":1611157527459,"results":"57","hashOfConfig":"34"},{"size":231,"mtime":1611157527459,"results":"58","hashOfConfig":"34"},{"size":209,"mtime":1611107989228,"results":"59","hashOfConfig":"34"},{"size":359,"mtime":1611075554805,"results":"60","hashOfConfig":"34"},{"size":1148,"mtime":1611262322465,"results":"61","hashOfConfig":"34"},{"size":956,"mtime":1611157527459,"results":"62","hashOfConfig":"34"},{"size":769,"mtime":1611157527460,"results":"63","hashOfConfig":"34"},{"size":1055,"mtime":1611262435615,"results":"64","hashOfConfig":"34"},{"size":144,"mtime":1611293681967,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1w2lqaa",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/kelvindt/lighthouse/echo/front-end/src/index.js",[],["137","138"],"/Users/kelvindt/lighthouse/echo/front-end/src/reportWebVitals.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/App.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Header.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Navbar.jsx",["139"],"import { Link } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\n\nimport useApplicationData from '../hooks/useApplicationData';\n\nimport NavbarItem from './NavbarItem';\nimport Logout from './Login/Logout';\n\nimport './stylesheets/Navbar.css';\n\nexport default function Navbar(props) {\n\n  const [cookies, setCookie] = useCookies([\"user\"]);\n\n  const { handleLogout } = useApplicationData();\n\n  return (\n\n    <div className=\"Navbar\">\n      <Link to=\"/\">\n        <NavbarItem>Home</NavbarItem>\n      </Link>\n      <Link to=\"/videos\">\n        <NavbarItem>User videos</NavbarItem>\n      </Link>\n      <Link to=\"/categories\">\n        <NavbarItem>User categories</NavbarItem>\n      </Link>\n      <Link to=\"/search\">\n        <NavbarItem>Search results</NavbarItem>\n      </Link>\n      {/* <Link to=\"/videos/id\">\n        <NavbarItem>Show moments</NavbarItem>\n      </Link> */}\n      { cookies.user ?\n        <Link to=\"/\">\n          <Logout onClick={handleLogout}>Log out user {cookies.user}</Logout>\n        </Link> :\n        <>\n          <Link to=\"/register\">\n            <NavbarItem>Register</NavbarItem>\n          </Link>\n          <Link to=\"/login\">\n            <NavbarItem>Log in</NavbarItem>\n          </Link>\n        </>\n      }\n    </div>\n\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/Categories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/UserVideosPage/UserVideos.jsx",["140"],"import SearchBar from '../shared/SearchBar';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from \"react-router-dom\";\n\nexport default function UserVideos(props) {\n  \n  const videos = props.state.videos\n  \n  const videoListItem = videos && videos.map((video, index) => {\n    \n    const youtubeId = video.link.slice(32, 43);\n    const thumbnail = `https://img.youtube.com/vi/${youtubeId}/mqdefault.jpg`;\n    const videoOnClick = ()=> {\n      props.onVideoSelected(youtubeId);\n    };\n\n    return (\n      <Card key={index} class='userVideos' style={{width: \"30em\"}} onClick={()=>videoOnClick()}>\n        <Link to=\"/moments\">\n          <Card.Header>\n            <h6>{video.title}</h6>\n          </Card.Header>\n          <Card.Img variant=\"bottom\" src={thumbnail} alt=\"thumbnail\" />\n        </Link>\n      </Card>\n    )\n  })\n\n  return (\n    <div className=\"user-videos\">\n      <h4>All User Videos</h4>\n      {/* <SearchBar /> */}\n      <ul>{videoListItem}</ul>\n    </div>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/Home.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditCategories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/ShowMoments.jsx",["141"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport VideoPlayer from '../VideoPlayer';\nimport Button from '../shared/Button';\nimport List from '../shared/ListWithEditDelete';\nimport MomentBar from '../shared/MomentBar';\nimport NewMoment from './NewMoment';\nimport Save from './Save';\n\n\n\nexport default function Moment(props) {\n  \n  console.log(\"oldVideo:\",props.oldVideo)\n\n  const [videoInfo, setVideoInfo] = useState(\n    {\n      duration: 1000,\n      startTime: 70,\n      endTime: 100,\n      selectedVideoID: props.selectedVideoID,\n      selectedCat: \"Categories\",\n      categories: [],\n      title: '',\n      moments: []\n    }\n  )\n\n  const getMoments = (selectedVideoID) => {\n    console.log(\"vidID to DB:\", selectedVideoID)\n    axios.get('http://localhost:3001/api/moments', {\n      params: {selectedVideoID},\n      withCredentials: true\n    })\n    .then((response)=>{\n      console.log(\"fromDBmoms\",response.data)\n      setVideoInfo((prev)=>({...prev, moments: response.data }))\n    })\n    .catch(err => console.log(err));\n  };\n\n  // const getCategory = () => {\n  //   axios.get('http://localhost:3001/api/moments/categories', {\n  //     params: {},\n  //     withCredentials: true\n  //   })\n  //   .then((response)=>{\n  //     console.log(\"fromDBcats\",response.data)\n  //     setVideoInfo((prev)=>({...prev, categories: response.data }))\n  //   })\n  //   .catch(err => console.log(err));\n  // };\n\n    useEffect(() => {\n      if(props.oldVideo){\n        getMoments(videoInfo.selectedVideoID);\n        // getCategory();\n      }\n    }, []);\n    console.log(\"videoInfo after axios\", videoInfo)\n \n  return (\n    <div className=\"Moment\">\n      {/* <SearchBar /> */}\n      <VideoPlayer videoInfo = {videoInfo} setVideoInfo={setVideoInfo}/>\n      <MomentBar videoInfo = {videoInfo} setVideoInfo={setVideoInfo}/>\n      <Save videoInfo={videoInfo} setVideoInfo={setVideoInfo} selectedCat={videoInfo.selectedCat} categories={props.categories} categWithId={props.categWithId} moments={videoInfo.moments} oldVideo={props.oldVideo} />\n      <Button>Save video</Button>\n      <Button>Add moment</Button>\n      <NewMoment />\n      <List onVideos={true}>Moments</List>\n    </div>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/NavbarItem.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/Save.jsx",["142","143","144"],"import { useState } from 'react';\nimport axios from 'axios';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nexport default function Save({videoInfo, setVideoInfo, selectedCat, categories }) {\n  \n  const cat = categories;\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleTitle = (catergory) => setVideoInfo(prev => ({...prev, selectedCat: catergory }))\n\n  //waits for state have values\n  let categoriesDropdown;\n  if(cat) {\n    categoriesDropdown = cat.map((catergory) => {\n      return(\n        <Dropdown.Item onClick={()=>handleTitle(catergory)}>{catergory}</Dropdown.Item>\n      );\n    });\n  }\n\n  const handleSave = () => {\n    console.log(\"Save clicked\")\n\n    const formatedLink = \"https://www.youtube.com/\" + videoInfo.selectedVideoID;\n\n    const videoSaveInfo = {link: formatedLink}\n    return axios.post('http://localhost:3001/api/videos', { videoSaveInfo })\n    .then((response) => {\n      console.log(response);\n    })\n  }\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Save video\n      </Button>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Save Video with Moments</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form>\n            <p>Video title:</p><input type=\"text\"></input>\n            <Dropdown>\n              <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">\n                {selectedCat}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                {categoriesDropdown}\n              </Dropdown.Menu>\n            </Dropdown>\n          </form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSave} >\n            Save\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/NewMoment.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/ListWithEditDelete.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Button.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/SearchBar.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useApplicationData.js",["145"],"import {\n  useState,\n  useEffect\n} from 'react';\n\n//use cookies hook\nimport { useCookies } from \"react-cookie\";\n\nimport axios from 'axios';\n\nimport youtubeApi from '../api/youtube';\n\nconst useApplicationData = () => {\n\n  //initial state\n  const [state, setState] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    error: '',\n    redirect: null,\n    users: null,\n    videos: null,\n    categories: null,\n    videoMetaInfo: [],\n    selectedVideoID: null,\n    startTime: 70,\n    endTime: 100,\n    videoDuration: null,\n    oldVideo: false\n  });\n\n  //set initial cookie\n  const [cookies, setCookie, removeCookie] = useCookies([\"user\"]);\n\n  //extracts all users from the DB + connected videos and categories\n  useEffect(() => {\n\n    //stops the axios calls from happening when user is not logged in\n    if (!cookies.user) {\n      return null;\n    }\n\n    //promise.all to call all data we need at the same time\n    Promise.all([\n      axios.get('api/users'),\n      axios.get('/api/videos'),\n      axios.get('api/categories'),\n    ])\n    .then(all => {\n\n      //'all' comes back as an array of responses from the axios calls\n      // console.log('users:', all[0].data);\n      // console.log('videos:', all[1].data.response);\n      // console.log('categories:', all[2].data)\n      // const categResponse = all[2].data;\n      const categNames = all[2].data.map(item => item.name);\n      \n      //set current state with axios calls data\n      setState(prev => ({...prev, users: all[0].data, videos: all[1].data.response, categories: categNames, categWithId: all[2].data}))\n      \n    })\n    .catch((err) => console.log(err));\n\n  }, [cookies.user]);   //<-- only renders when user is present\n\n  //handles input from log in and register forms dynamically\n  const handleFormChange = event => {\n\n    const input = event.target.value;\n    const fieldName = event.target.name;\n\n    setState({\n      ...state,\n      [fieldName]: input\n    });\n\n  };\n\n  const handleRegisterSubmit = () => {\n    \n    //deconstruct values needed from state\n    const { firstName, lastName, email, password, errors } = state;\n    let validForm = true;\n    \n    //if any of the inputs are empty, set error state\n    if (!firstName || !lastName || !email || !password) {\n\n      validForm = false;\n      setState({...state, error: 'Fields cannot be empty!'});\n\n    }\n\n    if (validForm) {\n      //reset error state\n      setState({...state, error: ''});\n\n      //build input object to send to back-end\n      const userInput = {\n        firstName,\n        lastName,\n        email,\n        password\n      };\n\n      //send data to back-end\n      return axios.post('http://localhost:3001/register', { userInput })\n        .then(response => {\n\n            //if server sends response.msg, user exists in DB\n            const userExists = response.data.msg\n\n            //if user exists set state error\n            if (userExists) {\n              setState({...state, error: userExists});\n\n            } else {\n              console.log('user created, id:', response.data.id);\n              setCookie(\"user\", response.data.id, {\n                path: \"/\"\n              });\n              setState({...state, redirect: '/'});\n            }\n        })\n        .catch(err => {console.log(err)})\n    }\n  }\n\n  const handleLoginSubmit = () => {\n    \n    //deconstruct values needed from state\n    const { email, password } = state;\n    let validForm = true;\n    \n    //if any of the inputs are empty, set error state\n    if (!email || !password) {\n\n      validForm = false;\n      setState({...state, error: 'Fields cannot be empty!'});\n\n    }\n\n    if (validForm) {\n      //reset error state\n      setState({...state, error: ''});\n\n      //build input object to send to back-end\n      const loginInput = {\n        email,\n        password\n      };\n\n      //send data to back-end\n      return axios.post('http://localhost:3001/login', { loginInput })\n        .then(response => {\n\n            //if server sends response.msg, user exists in DB\n            const noUser = response.data.msg\n\n            //if user exists set state error\n            if (noUser) {\n              setState({...state, error: noUser});\n\n            } else {\n\n              console.log('user logged in, id:', response.data.id);\n              setCookie(\"user\", response.data.id, {\n                path: \"/\"\n              });\n              setState({...state, redirect: '/'});\n            }\n        })\n        .catch(err => {console.log('error:', err)})\n    }\n  }\n\n  const handleLogout = () => {\n    //reset cookie when user logs out\n    removeCookie(\"user\", { path: \"/\"});\n    console.log('user logged out');\n  }\n\n  const onVideoSelected = videoId => {\n    setState((prev)=>({ ...prev, selectedVideoID:videoId, oldVideo: false }))\n  }\n\n  const onSearch = async keyword => {\n    const response = await youtubeApi.get(\"/search\",{\n      params:{\n        q:keyword\n      }\n    })\n\n    console.log(response.data)\n\n    setState({\n      ...state,\n      videoMetaInfo: response.data.items,\n      selectedVideoID: response.data.items[0].id.videoId\n    })\n\n    console.log(state)\n  }\n\n  // const momentsBySelectedVid = (selectedVideoID) => {\n  \n  //   if(selectedVideoID) {\n  //     axios.get('http://localhost:3001/api/moments/', {\n  //       params: {selectedVideoID},\n  //       withCredentials: true\n  //     })\n  //     .then((response)=>{\n  //       console.log(\"in USEapp DB result\",response)\n  //       console.log('info sent to backend')\n  //       //setState({..state, myInfo: content})\n  //     })\n  //     .catch(err => console.log(err));\n  //   }\n  // };\n\n  const setSelectedVideoID = (videoID) =>{\n    setState((prev)=>({...prev, selectedVideoID: videoID}));\n  };\n  \n  return { state, cookies, handleFormChange, handleRegisterSubmit, handleLoginSubmit, onVideoSelected, onSearch, handleLogout, setState, setSelectedVideoID }\n\n};\n\nexport default useApplicationData;","/Users/kelvindt/lighthouse/echo/front-end/src/api/youtube.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Register/Register.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/VideoList.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Video.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/MomentBar.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/VideoPlayer.jsx",["146"],"import YouTube from 'react-youtube';\n\n\nexport default function YTplayer(props) {\n  \n  const videoOnReady=(event) =>{\n    // access to player in all event handlers via event.target\n    const player = event.target;\n    \n    player.setLoop(true)\n    console.log(\"Video Duration\",player.getDuration())\n    let vd = player.getDuration()\n    props.setVideoInfo(prev=>({...prev, duration: vd}))\n  }\n  const videoOnPlay=(event) =>{\n    // access to player in all event handlers via event.target\n    const player = event.target;\n  }\n\n  const videoOnEnd=(event) =>{\n    // access to player in all event handlers via event.target\n    const player = event.target;\n    player.seekTo(props.videoInfo.startTime)\n    player.playVideo(); \n  }\n\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n      start: props.videoInfo.startTime,\n      end: props.videoInfo.endTime\n\n    },\n  };\n  \n  return ( \n    <YouTube \n      videoId={props.videoInfo.selectedVideoID} \n      opts={opts} \n      onReady={videoOnReady}\n      onPlay={videoOnPlay}\n      onEnd={videoOnEnd}\n    />\n  );\n}\n","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Login.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Logout.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useVisualMode.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategoriesList.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/VideoThumbnails.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/TogglingEditForm.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/PasteBar.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/SearchResults/Videos.jsx",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":13,"column":19,"nodeType":"153","messageId":"154","endLine":13,"endColumn":28},{"ruleId":"151","severity":1,"message":"155","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":60,"column":8,"nodeType":"158","endLine":60,"endColumn":10,"suggestions":"159"},{"ruleId":"151","severity":1,"message":"160","line":16,"column":10,"nodeType":"153","messageId":"154","endLine":16,"endColumn":19},{"ruleId":"151","severity":1,"message":"161","line":16,"column":21,"nodeType":"153","messageId":"154","endLine":16,"endColumn":33},{"ruleId":"151","severity":1,"message":"162","line":66,"column":15,"nodeType":"153","messageId":"154","endLine":66,"endColumn":30},{"ruleId":"151","severity":1,"message":"163","line":84,"column":51,"nodeType":"153","messageId":"154","endLine":84,"endColumn":57},{"ruleId":"151","severity":1,"message":"164","line":25,"column":11,"nodeType":"153","messageId":"154","endLine":25,"endColumn":17},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar","'SearchBar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.oldVideo' and 'videoInfo.selectedVideoID'. Either include them or remove the dependency array.","ArrayExpression",["167"],"'showAlert' is assigned a value but never used.","'setShowAlert' is assigned a value but never used.","'filteredMoments' is assigned a value but never used.","'errors' is assigned a value but never used.","'player' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},"Update the dependencies array to be: [props.oldVideo, videoInfo.selectedVideoID]",{"range":"170","text":"171"},[1573,1575],"[props.oldVideo, videoInfo.selectedVideoID]"]