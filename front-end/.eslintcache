[{"/Users/kelvindt/lighthouse/echo/front-end/src/index.js":"1","/Users/kelvindt/lighthouse/echo/front-end/src/reportWebVitals.js":"2","/Users/kelvindt/lighthouse/echo/front-end/src/App.jsx":"3","/Users/kelvindt/lighthouse/echo/front-end/src/components/Header.jsx":"4","/Users/kelvindt/lighthouse/echo/front-end/src/components/Navbar.jsx":"5","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/Categories.jsx":"6","/Users/kelvindt/lighthouse/echo/front-end/src/components/UserVideosPage/UserVideos.jsx":"7","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/Home.jsx":"8","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditCategories.jsx":"9","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/ShowMoments.jsx":"10","/Users/kelvindt/lighthouse/echo/front-end/src/components/NavbarItem.jsx":"11","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/Save.jsx":"12","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/NewMoment.jsx":"13","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Button.jsx":"14","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/SearchBar.jsx":"15","/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useApplicationData.js":"16","/Users/kelvindt/lighthouse/echo/front-end/src/api/youtube.js":"17","/Users/kelvindt/lighthouse/echo/front-end/src/components/Register/Register.jsx":"18","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/VideoList.jsx":"19","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Video.jsx":"20","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/MomentBar.jsx":"21","/Users/kelvindt/lighthouse/echo/front-end/src/components/VideoPlayer.jsx":"22","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Login.jsx":"23","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Logout.jsx":"24","/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useVisualMode.js":"25","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategories.jsx":"26","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategoriesList.jsx":"27","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/VideoThumbnails.jsx":"28","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/TogglingEditForm.jsx":"29","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/PasteBar.jsx":"30","/Users/kelvindt/lighthouse/echo/front-end/src/components/SearchResults/Videos.jsx":"31","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditDeleteListCategs.jsx":"32","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/AutoButton.jsx":"33","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/MomentsList.jsx":"34"},{"size":656,"mtime":1611512224320,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1610678906294,"results":"37","hashOfConfig":"36"},{"size":2869,"mtime":1611608012832,"results":"38","hashOfConfig":"36"},{"size":976,"mtime":1611605615388,"results":"39","hashOfConfig":"36"},{"size":1391,"mtime":1611602045819,"results":"40","hashOfConfig":"36"},{"size":1031,"mtime":1611602045814,"results":"41","hashOfConfig":"36"},{"size":2799,"mtime":1611601890219,"results":"42","hashOfConfig":"36"},{"size":649,"mtime":1611608231918,"results":"43","hashOfConfig":"36"},{"size":1925,"mtime":1611602045815,"results":"44","hashOfConfig":"36"},{"size":3380,"mtime":1611602045818,"results":"45","hashOfConfig":"36"},{"size":140,"mtime":1610741729934,"results":"46","hashOfConfig":"36"},{"size":5646,"mtime":1611607685537,"results":"47","hashOfConfig":"36"},{"size":2884,"mtime":1611602045817,"results":"48","hashOfConfig":"36"},{"size":223,"mtime":1611422083964,"results":"49","hashOfConfig":"36"},{"size":1384,"mtime":1611512684014,"results":"50","hashOfConfig":"36"},{"size":5948,"mtime":1611601890222,"results":"51","hashOfConfig":"36"},{"size":236,"mtime":1611601890214,"results":"52","hashOfConfig":"36"},{"size":2339,"mtime":1611601890219,"results":"53","hashOfConfig":"36"},{"size":521,"mtime":1611601890222,"results":"54","hashOfConfig":"36"},{"size":1407,"mtime":1611601890221,"results":"55","hashOfConfig":"36"},{"size":1344,"mtime":1611602045819,"results":"56","hashOfConfig":"36"},{"size":2233,"mtime":1611602045819,"results":"57","hashOfConfig":"36"},{"size":1511,"mtime":1611601890216,"results":"58","hashOfConfig":"36"},{"size":231,"mtime":1611157527459,"results":"59","hashOfConfig":"36"},{"size":209,"mtime":1611107989228,"results":"60","hashOfConfig":"36"},{"size":593,"mtime":1611602045815,"results":"61","hashOfConfig":"36"},{"size":1286,"mtime":1611602045816,"results":"62","hashOfConfig":"36"},{"size":1284,"mtime":1611443456715,"results":"63","hashOfConfig":"36"},{"size":713,"mtime":1611523895938,"results":"64","hashOfConfig":"36"},{"size":1164,"mtime":1611608410411,"results":"65","hashOfConfig":"36"},{"size":144,"mtime":1611293681967,"results":"66","hashOfConfig":"36"},{"size":4973,"mtime":1611602045815,"results":"67","hashOfConfig":"36"},{"size":818,"mtime":1611523191180,"results":"68","hashOfConfig":"36"},{"size":3405,"mtime":1611602045817,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1w2lqaa",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"72"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"72"},"/Users/kelvindt/lighthouse/echo/front-end/src/index.js",[],["153","154"],"/Users/kelvindt/lighthouse/echo/front-end/src/reportWebVitals.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/App.jsx",["155"],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Header.jsx",["156","157"],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Navbar.jsx",["158"],"import { Link } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\n\nimport useApplicationData from '../hooks/useApplicationData';\n\nimport NavbarItem from './NavbarItem';\nimport Logout from './Login/Logout';\n\nimport './stylesheets/Navbar.css';\n\nexport default function Navbar(props) {\n\n  const [cookies, setCookie] = useCookies([\"user\"]);\n\n  const { handleLogout } = useApplicationData();\n\n  return (\n\n    <div className=\"Navbar\">\n      <Link to=\"/\">\n        <NavbarItem>Home</NavbarItem>\n      </Link>\n      <Link to=\"/videos\">\n        <NavbarItem>User videos</NavbarItem>\n      </Link>\n      <Link to=\"/categories\">\n        <NavbarItem>User categories</NavbarItem>\n      </Link>\n      <Link to=\"/search\">\n        <NavbarItem>Search results</NavbarItem>\n      </Link>\n      {/* <Link to=\"/videos/id\">\n        <NavbarItem>Show moments</NavbarItem>\n      </Link> */}\n      { cookies.user ?\n        <Link to=\"/\">\n          <Logout onClick={handleLogout}>Log out user {cookies.user}</Logout>\n        </Link> :\n        <>\n          <Link to=\"/register\">\n            <NavbarItem>Register</NavbarItem>\n          </Link>\n          <Link to=\"/login\">\n            <NavbarItem>Log in</NavbarItem>\n          </Link>\n        </>\n      }\n    </div>\n\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/Categories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/UserVideosPage/UserVideos.jsx",["159"],"import { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nimport SearchBar from '../shared/SearchBar';\n\nimport Card from 'react-bootstrap/Card';\nimport Button from '../shared/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nexport default function UserVideos(props) {\n  const videos = props.state.videos;\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertVid, setAlertVid] = useState(null);\n\n\n  const handleAlert = vid => {\n    setAlertVid(vid);\n    setShowAlert(true);\n  };\n\n  const handleDelete = (video) => {\n\n    setShowAlert(false);\n    \n    return axios.delete('http://localhost:3001/api/videos', { params: video.id })\n    .then(response => {\n      console.log('client says: delete request sent');\n      console.log(response.data);\n      props.setState(prev =>({...prev, videos: videos.filter((vid)=> vid.id !== video.id)}))\n    })\n    .catch(err => { console.log('error:', err) })\n\n  };\n\n//------------------------------------------------------------------//\n  const videoList = videos && videos.map((video, index) => {\n\n    const youtubeId = video.link.slice(32, 43);\n    const thumbnail = `https://img.youtube.com/vi/${youtubeId}/mqdefault.jpg`;\n\n    const videoOnClick = () => {\n      props.onVideoSelected(youtubeId);\n      props.setState((prev) => ({ ...prev, oldVideo: true, selectedVidId: video.id }));\n    };\n\n    return (\n\n      <>\n       <Card key={index} className='userVideos' style={{ width: \"30em\" }} onClick={() => videoOnClick()}>\n          <Link to=\"/moments\">\n            <Card.Header>\n              <h6>{video.title}</h6>\n            </Card.Header>\n            <Card.Img variant=\"bottom\" src={thumbnail} alt=\"thumbnail\" />\n          </Link>\n          <Button onClick={()=>handleAlert(video)}>Delete</Button>\n        </Card>\n      </>\n      \n    );\n  });\n\n  return (\n    <>\n      <div className=\"Uservideos\">\n        <h4>All User Videos</h4>\n        {/* <SearchBar /> */}\n\n        <Alert show={showAlert} variant=\"danger\" style={{width: \"20em\"}}>\n          <Alert.Heading>Delete Video</Alert.Heading>\n          {alertVid && <p>\"{alertVid.title}\"</p>}\n          <p>Will be removed and cannot be undone. Proceed?</p>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n            <Button onClick={() => setShowAlert(false)}>Cancel</Button>\n            <Button onClick={() => handleDelete(alertVid)} variant=\"outline-danger\">\n              Proceed\n          </Button>\n          </div>\n        </Alert>\n\n        {/* <Modal show={showAlert} onHide={() => setShowAlert(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal> */}\n\n        <ul>{videoList}</ul>\n      </div>\n    </>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/Home.jsx",["160"],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditCategories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/ShowMoments.jsx",["161","162"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport VideoPlayer from '../VideoPlayer';\nimport MomentsList from './MomentsList';\nimport MomentBar from '../shared/MomentBar';\nimport NewMoment from './NewMoment';\nimport Save from './Save';\nimport AutoButton from './AutoButton';\n\n\n\nexport default function Moment(props) {\n\n  const { state, setState, cookies } = props;\n\n  // console.log(\"oldVideo:\",props.oldVideo)\n  console.log(\"state on Moment:\", state);\n\n  const [videoInfo, setVideoInfo] = useState(\n    {\n      duration: null,\n      newMoment: \"\",\n      startTime: 0,\n      endTime: 0,\n      selectedVideoID: props.selectedVideoID,\n      selectedCat: \"Categories\",\n      categories: [],\n      title: '',\n      moments: [],\n      autoplay: 1,\n      loop: 0\n    }\n  );\n  console.log('videoInfo on moments :', videoInfo);\n\n  const getMoments = (selectedVideoID) => {\n    // console.log(\"vidID to DB:\", selectedVideoID)\n    axios.get('http://localhost:3001/api/moments', {\n      params: { selectedVideoID },\n      withCredentials: true\n    })\n      .then((response) => {\n        // console.log(\"fromDBmoms\",response.data)\n        setVideoInfo((prev) => ({ ...prev, moments: response.data, startTime: 0 }));\n      })\n      .catch(err => console.log(err));\n  };\n\n  // const getCategory = () => {\n  //   axios.get('http://localhost:3001/api/moments/categories', {\n  //     params: {},\n  //     withCredentials: true\n  //   })\n  //   .then((response)=>{\n  //     console.log(\"fromDBcats\",response.data)\n  //     setVideoInfo((prev)=>({...prev, categories: response.data }))\n  //   })\n  //   .catch(err => console.log(err));\n  // };\n\n  // const getCatid = () => {\n  //   let catId;\n  //   console.log(\"SHOWMOMENT:\", videoInfo.selectedCat);\n  //   console.log(\"SHOWMOMENT:\", props.categWithId);\n  //   catId = props.categWithId.find(categ => categ.name === videoInfo.selectedCat);\n  //   console.log(\"SHOWmfindID\", catId);\n  //   setVideoInfo((prev)=>({...prev, categoryId: catId }))\n\n  // };\n\n  useEffect(() => {\n    if (props.oldVideo) {\n      getMoments(videoInfo.selectedVideoID);\n    }\n    // if(videoInfo.selectedCat){\n\n    //   getCatid();\n    // }\n  }, [videoInfo.selectedCat]);\n  // console.log(\"videoInfo after axios\", videoInfo)\n\n  return (\n    <div className=\"Moments\">\n      {/* <SearchBar /> */}\n      <VideoPlayer videoInfo={videoInfo} setVideoInfo={setVideoInfo} state={state} setState={setState} />\n      <MomentBar videoInfo={videoInfo} setVideoInfo={setVideoInfo} />\n\n      <AutoButton setVideoInfo={setVideoInfo} />\n\n      { !props.oldVideo &&\n        <>\n          <Save\n            videoInfo={videoInfo}\n            setVideoInfo={setVideoInfo}\n            selectedCat={videoInfo.selectedCat}\n            categories={props.categories}\n            categWithId={props.categWithId}\n            moments={videoInfo.moments}\n            oldVideo={props.oldVideo}\n            selectedVidId={props.selectedVidId}\n            state={state}\n            setState={setState} />\n        </>\n      }\n      <NewMoment videoInfo = {videoInfo} setVideoInfo={setVideoInfo} cookies={cookies} videoDBid={state.selectedVidId} state={state} setState={setState} oldVideo={props.oldVideo} />\n      <MomentsList videoInfo = {videoInfo} setVideoInfo={setVideoInfo} state={state} setSate={setState} />\n    </div>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/NavbarItem.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/Save.jsx",["163","164","165","166","167"],"/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/NewMoment.jsx",["168","169"],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport Button from '../shared/Button';\n\nexport default function Moment(props) {\n\n  const { videoInfo, setVideoInfo, videoDBid, cookies, state, setState } = props;\n\n  //state for the form toggled by 'Add moment'\n  const [showForm, setShowForm] = useState(false);\n\n  //state for the alert confirming creation\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleSave = (newValue, vidId) => {\n\n    setShowForm(false);\n    setShowAlert(true);\n    setVideoInfo({...videoInfo, newMoment: \"\"});\n\n    const userId = cookies.user;\n    let start = videoInfo.startTime;\n    let end = videoInfo.endTime;\n\n\n    //send data to back-end\n    return axios.post('http://localhost:3001/api/moments', { userId, vidId, newValue, start, end})\n      .then(response => {\n\n        console.log('response from addMoment :', response.data);\n        videoInfo.moments.push(response.data)\n\n        setVideoInfo({...videoInfo, moments: videoInfo.moments});\n      })\n      .catch(err => { console.log('error:', err) })\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowAlert(false);\n    }, 3500);\n    return () => clearTimeout(timer);\n  }, [showAlert]);\n\n\n  return (\n    <div className=\"Moment\">\n      {showAlert && <small>Succsessfully created!</small>}<br />\n      {!showForm && <Button onClick={() => setShowForm(true)}>Add moment</Button>}\n      <br /><br />\n      {showForm && <>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"Insert moment name\"\n            name=\"new-moment\"\n            value={videoInfo.newMoment}\n            onChange={e => setVideoInfo({ ...videoInfo, newMoment: e.target.value })}\n          />\n          <FormControl\n            placeholder=\"Start time(seconds)\"\n            name=\"start-time\"\n            value={videoInfo.startTime}\n            onChange={e => setVideoInfo({ ...videoInfo, startTime: e.target.value })}\n          />\n          <FormControl\n            placeholder=\"End time(seconds)\"\n            name=\"end-time\"\n            value={videoInfo.endTime}\n            onChange={e => setVideoInfo({ ...videoInfo, endTime: e.target.value })}\n          />\n          <InputGroup.Append>\n            <Button variant=\"outline-secondary\" onClick={() => handleSave(videoInfo.newMoment, videoDBid)}>Save</Button>\n            <Button variant=\"outline-secondary\" onClick={() => setShowForm(false)}>Cancel</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </>\n      }\n    </div>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Button.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/SearchBar.jsx",["170"],"import React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nexport default function SearchBar(props){\n  const [state, setState] = useState({\n    title: ''\n  })\n\n  const onSearchChanged = event => {\n    const _title = event.target.value\n\n    console.log(_title)\n\n    setState({title: _title})\n  }\n\n  const onSubmit = event => {\n    event.preventDefault()\n\n    console.log(state.title)\n\n    props.onSearch(state.title)\n  }\n\n  return (\n    // <div>\n    // <form onSubmit={onSubmit}>\n    //   <div className=\"form-controls\">\n    //     <label>Search</label>\n    //     <input value={state.title} onChange={onSearchChanged} id=\"video-search\" type=\"text\" placeholder=\"Enter Search Keyword\"></input>\n    //   </div>\n    // </form>\n\n    <Form onSubmit={onSubmit}>\n      <InputGroup onChange={onSearchChanged} className=\"form-controls\" id=\"video-search\">\n        <FormControl\n          placeholder=\"Enter Search Keyword\"\n          aria-label=\"Search\"\n        />\n        <InputGroup.Append>\n          <Button type=\"submit\" value={state.title} variant=\"outline-secondary\" >Search</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </Form>\n  // </div>\n\n  \n  )\n}\n\n","/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useApplicationData.js",["171"],"import {\n  useState,\n  useEffect\n} from 'react';\n\n//use cookies hook\nimport { useCookies } from \"react-cookie\";\n\nimport axios from 'axios';\n\nimport youtubeApi from '../api/youtube';\n\nconst useApplicationData = () => {\n\n  //initial state\n  const [state, setState] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    error: '',\n    redirect: null,\n    users: null,\n    videos: null,\n    categories: null,\n    videoMetaInfo: [],\n    selectedVideoID: null,\n    startTime: 0,\n    endTime: null,\n    videoDuration: null,\n    oldVideo: false,\n    catRedirect: null\n  });\n\n  //set initial cookie\n  const [cookies, setCookie, removeCookie] = useCookies([\"user\"]);\n\n  //extracts all users from the DB + connected videos and categories\n  useEffect(() => {\n\n    //stops the axios calls from happening when user is not logged in\n    if (!cookies.user) {\n      return null;\n    }\n\n    //promise.all to call all data we need at the same time\n    Promise.all([\n      axios.get('api/users'),\n      axios.get('api/videos'),\n      axios.get('api/categories'),\n    ])\n    .then(all => {\n\n      //'all' comes back as an array of responses from the axios calls\n      // console.log('users:', all[0].data);\n      console.log('videos:', all[1].data.response);\n      // console.log('categories:', all[2].data)\n      // const categResponse = all[2].data;\n      const categNames = all[2].data.map(item => item.name);\n      \n      //set current state with axios calls data\n      setState(prev => ({...prev, users: all[0].data, videos: all[1].data.response, categories: categNames, categWithId: all[2].data}))\n      \n    })\n    .catch((err) => console.log(err));\n\n  }, [cookies.user]);   //<-- only renders when user is present\n\n  //handles input from log in and register forms dynamically\n  const handleFormChange = event => {\n\n    const input = event.target.value;\n    const fieldName = event.target.name;\n\n    setState({\n      ...state,\n      [fieldName]: input\n    });\n\n  };\n\n  const handleRegisterSubmit = () => {\n    \n    //deconstruct values needed from state\n    const { firstName, lastName, email, password, errors } = state;\n    let validForm = true;\n    \n    //if any of the inputs are empty, set error state\n    if (!firstName || !lastName || !email || !password) {\n\n      validForm = false;\n      setState({...state, error: 'Fields cannot be empty!'});\n\n    }\n\n    if (validForm) {\n      //reset error state\n      setState({...state, error: ''});\n\n      //build input object to send to back-end\n      const userInput = {\n        firstName,\n        lastName,\n        email,\n        password\n      };\n\n      //send data to back-end\n      return axios.post('http://localhost:3001/register', { userInput })\n        .then(response => {\n\n            //if server sends response.msg, user exists in DB\n            const userExists = response.data.msg\n\n            //if user exists set state error\n            if (userExists) {\n              setState({...state, error: userExists});\n\n            } else {\n              console.log('user created, id:', response.data.id);\n              setCookie(\"user\", response.data.id, {\n                path: \"/\"\n              });\n              setState({...state, redirect: '/'});\n            }\n        })\n        .catch(err => {console.log(err)})\n    }\n  }\n\n  const handleLoginSubmit = () => {\n    \n    //deconstruct values needed from state\n    const { email, password } = state;\n    let validForm = true;\n    \n    //if any of the inputs are empty, set error state\n    if (!email || !password) {\n\n      validForm = false;\n      setState({...state, error: 'Fields cannot be empty!'});\n\n    }\n\n    if (validForm) {\n      //reset error state\n      setState({...state, error: ''});\n\n      //build input object to send to back-end\n      const loginInput = {\n        email,\n        password\n      };\n\n      //send data to back-end\n      return axios.post('http://localhost:3001/login', { loginInput })\n        .then(response => {\n\n            //if server sends response.msg, user exists in DB\n            const noUser = response.data.msg\n\n            //if user exists set state error\n            if (noUser) {\n              setState({...state, error: noUser});\n\n            } else {\n\n              console.log('user logged in, id:', response.data.id);\n              setCookie(\"user\", response.data.id, {\n                path: \"/\"\n              });\n              setState({...state, redirect: '/'});\n            }\n        })\n        .catch(err => {console.log('error:', err)})\n    }\n  }\n\n  const handleLogout = () => {\n    //reset cookie when user logs out\n    removeCookie(\"user\", { path: \"/\"});\n    console.log('user logged out');\n  }\n\n  const onVideoSelected = videoId => {\n    setState((prev)=>({ ...prev, selectedVideoID:videoId, oldVideo: false }))\n  }\n\n  const onSearch = async keyword => {\n    const response = await youtubeApi.get(\"/search\",{\n      params:{\n        q:keyword\n      }\n    })\n\n    console.log(response.data)\n\n    setState({\n      ...state,\n      videoMetaInfo: response.data.items,\n      selectedVideoID: response.data.items[0].id.videoId\n    })\n\n    console.log(state)\n  }\n\n  // const momentsBySelectedVid = (selectedVideoID) => {\n  \n  //   if(selectedVideoID) {\n  //     axios.get('http://localhost:3001/api/moments/', {\n  //       params: {selectedVideoID},\n  //       withCredentials: true\n  //     })\n  //     .then((response)=>{\n  //       console.log(\"in USEapp DB result\",response)\n  //       console.log('info sent to backend')\n  //       //setState({..state, myInfo: content})\n  //     })\n  //     .catch(err => console.log(err));\n  //   }\n  // };\n\n  const setSelectedVideoID = (videoID) =>{\n    setState((prev)=>({...prev, selectedVideoID: videoID}));\n  };\n  \n  return { state, cookies, handleFormChange, handleRegisterSubmit, handleLoginSubmit, onVideoSelected, onSearch, handleLogout, setState, setSelectedVideoID }\n\n};\n\nexport default useApplicationData;","/Users/kelvindt/lighthouse/echo/front-end/src/api/youtube.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Register/Register.jsx",["172"],"import { Redirect } from \"react-router-dom\";\n\nimport useApplicationData from '../../hooks/useApplicationData';\n\nimport Button from '../shared/Button';\n\nexport default function Register(props) {\n\n  //handling all user state from within useApplicationData\n  const { state, handleFormChange, handleRegisterSubmit } = useApplicationData();\n\n  if (state.redirect) {\n    return <Redirect to={state.redirect} />\n  }\n\n  return (\n    <div className=\"Register\">\n      <div>\n        {state.error && <small>{state.error}</small>}\n      </div><br /> \n      <form onSubmit={event => event.preventDefault()} noValidate>\n        <label htmlFor=\"firstName\">\n          First name:&nbsp;&nbsp;\n          <input \n            type=\"text\" \n            name=\"firstName\"\n            value={state.firstName}\n            onChange={handleFormChange}\n            noValidate\n          ></input>\n        </label><br /> \n        <label htmlFor=\"lastName\">\n          Last name:&nbsp;&nbsp;\n          <input \n            type=\"text\" \n            name=\"lastName\" \n            onChange={handleFormChange}\n            noValidate\n          ></input>\n        </label><br /> \n        <label htmlFor=\"email\">\n          Email:&nbsp;&nbsp;\n          <input \n            type=\"email\" \n            name=\"email\" \n            onChange={handleFormChange}\n            noValidate\n          ></input>\n        </label><br /> \n        <label htmlFor=\"password\">\n          Password:&nbsp;&nbsp;\n          <input \n            type=\"password\" \n            name=\"password\" \n            onChange={handleFormChange}\n            noValidate\n          ></input>\n        </label>\n      </form>\n      <Button onClick={handleRegisterSubmit}>Register</Button>\n    </div>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/VideoList.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Video.jsx",["173"],"import { Link } from \"react-router-dom\"\n// import \"../stylesheets/_video.scss\";\nfunction selectVideo(videoIdObj, onVideoSelected) {\n  onVideoSelected(videoIdObj.videoId);\n}\nfunction getCss(imageurl) {\n  const _styles = {\n    backgroundImage: `url(${imageurl})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center center\",\n    height: \"180px\",\n    position: \"relative\"\n  };\n  return _styles;\n}\nfunction constructVideoTitles(videosData, onVideoSelected) {\n  return videosData.map(({ snippet, id }, index) => {\n    return (\n      <div\n        className=\"video\"\n        key={index}\n        onClick={() => selectVideo(id, onVideoSelected)}>\n        <div style={getCss(snippet.thumbnails.high.url)} key={index} />\n        <p className=\"title\">{snippet.title}</p>\n      </div>\n    );\n  });\n}\nconst Video = ({ data, onVideoSelected }) => {\n  return <> <Link to=\"/moments\"> {constructVideoTitles(data, onVideoSelected)} </Link></>;\n};\n\nexport default Video;","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/MomentBar.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/VideoPlayer.jsx",["174"],"import { useState } from 'react';\nimport YouTube from 'react-youtube';\nimport Alert from 'react-bootstrap/Alert';\n\n\nexport default function YTplayer(props) {\n\n  const { state, setState } = props;\n\n  const [show, setShow] = useState(false);\n\n  const videoOnReady=(event) =>{\n    // access to player in all event handlers via event.target\n    const player = event.target;\n    player.playVideo()\n    player.seekTo(props.videoInfo.startTime, true)\n    \n    player.setLoop(true)\n    console.log(\"Video Duration\",player.getDuration())\n    let vd = player.getDuration()\n    //set alert with duration is null\n    if (vd <= 0) {\n      setShow(true)\n    };\n\n    setState({...state, videoDuration: vd});\n\n    props.setVideoInfo(prev=>({...prev, duration: vd, defaultEnd: vd}))\n    \n  }\n\n  const videoOnPlay=(event) =>{\n    // access to player in all event handlers via event.target\n    const player = event.target;\n  }\n\n  const videoOnEnd=(event) =>{\n    // access to player in all event handlers via event.target\n    const player = event.target;\n    player.seekTo(props.videoInfo.startTime, true)\n    //stops the autoplay\n    if(props.videoInfo.loop === 0){\n      player.pauseVideo()\n    }\n  };\n\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: props.videoInfo.autoplay,\n      // autoplay: 1,\n      loop: props.videoInfo.loop,\n      start: props.videoInfo.startTime,\n      end: props.videoInfo.endTime\n\n    },\n  };\n\n  if (show) {\n    return (\n      <div>\n        <Alert variant=\"warning\" onClose={() => setShow(false)} dismissible>\n          <Alert.Heading>Video not Supported</Alert.Heading>\n          <p>\n            Sorry, Moment actions will not work, please select a different video.\n          </p>\n        </Alert>\n        <YouTube \n          videoId={props.videoInfo.selectedVideoID} \n          opts={opts} \n          onReady={videoOnReady}\n          onPlay={videoOnPlay}\n          onEnd={videoOnEnd}\n        />\n      </div>\n    );\n  }\n\n  return (\n\n    <YouTube \n      videoId={props.videoInfo.selectedVideoID} \n      opts={opts} \n      onReady={videoOnReady}\n      onPlay={videoOnPlay}\n      onEnd={videoOnEnd}\n    />\n  );\n}\n","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Login.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Logout.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useVisualMode.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategoriesList.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/VideoThumbnails.jsx",["175","176","177","178","179"],"import { useState } from 'react';\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\n\nexport default function VideoThumbnails(props) {\n\n  const { state, setState, onVideoSelected } = props;\n  let history = useHistory();\n\n  const thumbnails = state.videos\n    .filter(video => video.cat_name === props.category)\n    .map((video, i) => {\n      \n      const youtubeId = video.link.slice(32, 43);\n      const thumbnail = `https://img.youtube.com/vi/${youtubeId}/mqdefault.jpg`;\n\n      const videoOnClick = () => {\n        // props.onVideoSelected(youtubeId);\n        setState((prev) => ({ ...prev, oldVideo: true, selectedVidId: youtubeId }));\n        history.push('/moments', { update: true })\n\n      };\n  \n\n      //render each video detail\n      return (\n          <Card key={i} style={{width: \"30em\"}} onClick={()=> videoOnClick()} >\n            {/* <Link to=\"/moments\"> */}\n              <Card.Header>\n                <h6>{video.title}</h6>\n              </Card.Header>\n              <Card.Img variant=\"bottom\" src={thumbnail} alt=\"thumbnail\" />\n            {/* </Link> */}\n          </Card>\n      )\n  });\n\n  //render list based on videos existence\n  return (\n      <div className=\"VideoThumbnails\">\n        {thumbnails.length > 0 ? thumbnails : <p>Category empty, add some videos to see them here!</p>}\n      </div>\n  )\n};","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/TogglingEditForm.jsx",["180"],"import { useState } from 'react';\n\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport Button from './Button';\n\nexport default function TogglingEditForm(props) {\n\n  return (\n\n    <InputGroup className=\"mb-3\">\n      <FormControl\n        aria-describedby=\"basic-addon2\"\n        placeholder={props.placeholder}\n        value={props.value}\n        name={props.name}\n        onChange={props.onChange}\n      />\n      <InputGroup.Append>\n        <Button variant=\"outline-secondary\" onClick={props.onSave}>Save</Button>\n        <Button variant=\"outline-secondary\" onClick={props.onCancel}>Cancel</Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n};","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/PasteBar.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/SearchResults/Videos.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditDeleteListCategs.jsx",["181"],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Alert from 'react-bootstrap/Alert';\n\nimport Button from '../shared/Button';\nimport TogglingEditForm from '../shared/TogglingEditForm';\n\nexport default function List(props) {\n\n  //using app data state to get categories\n  const { state, setState } = props;\n\n  //keeping edit form state local to avoid too much rendering\n  const [catName, setCatName] = useState(\"\");\n  const [editMode, setEditMode] = useState(null);\n\n  //sets edit mode to current form and value to name extracted from state\n  const setMode = (i, cat) => {\n    setEditMode(i);\n    setCatName(cat);\n  };\n\n  //state of delete alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertCateg, setAlertCateg] = useState(null);\n\n  const handleSave = (newValue, oldValue) => {\n\n    //shallow copy of state categories\n    const categ = [...state.categories];\n    const categWithIds = [...state.categWithId];\n\n    //get index of value being changed\n    const oldIndex = categ.indexOf(oldValue);\n\n    //change old value at index with new value\n    categ[oldIndex] = newValue;\n\n    //set state to new list of categories\n    setState({ ...state, categories: categ });\n\n    //extract id of current category to pass to back-end\n    let id;\n    categWithIds.forEach(item => {\n\n      if(item.name === oldValue) {\n        id = item.id;\n      }\n    })\n\n    //send new name and index to back-end\n    return axios.put('http://localhost:3001/api/categories', { newValue, id })\n      .then(response => {\n        setEditMode(null);\n\n        console.log('client says: updated cat name sent');\n        console.log(response.data);\n      })\n      .catch(err => { console.log('error:', err) })\n\n  };\n\n  const handleDelete = (categName) => {\n    setShowAlert(false);\n\n    //shallow copy of categories with ids\n    const categWithIds = [...state.categWithId];\n    console.log('categWithIds :', categWithIds);\n\n    //extract id of current category to pass to back-end\n    //!!on refactor of code, this can be moved into a helper!!\n    let id;\n    categWithIds.forEach(item => {\n      console.log('item :', item.name);\n      console.log('categName :', categName);\n      \n      \n      if(item.name === categName) {\n        id = item.id;\n      }\n    })\n    console.log('id :', id);\n\n\n    //send data to back-end\n    return axios.delete('http://localhost:3001/api/categories', { data: { id } })\n      .then(response => {\n        console.log('client says: delete request sent');\n        console.log(response.data);\n        setState({...state, categories: state.categories.filter(categ => !categ.includes(categName))})\n      })\n      .catch(err => { console.log('error:', err) })\n\n  };\n\n  const handleAlert = (categName) => {\n    setAlertCateg(categName);\n    setShowAlert(true);\n  };\n\n  const categoriesList = state.categories && state.categories.map((name, i) => {\n\n    return (\n\n      <div key={i}>\n        {/* show category name when edit mode is not active for current element */}\n        {editMode !== i && name}\n        {/* on edit mode active for current element show edit form */}\n        {editMode === i ? (\n          <TogglingEditForm\n            value={catName}\n            name=\"cat-name\"\n            placeholder=\"Category name\"\n            onCancel={() => setEditMode(null)}\n            onChange={(e) => setCatName(e.target.value)}\n            onSave={(e) => handleSave(catName, name)}\n          />\n        ) :\n          // else show the buttons\n          (<>\n            <Button onClick={() => setMode(i, name)} children={'Edit'} />\n            {!showAlert && <Button onClick={() => handleAlert(name)}>Delete</Button>}\n          </>)\n        }\n      </div>\n    );\n\n  });\n\n  return (\n    <>\n      <>\n        <Alert show={showAlert} variant=\"danger\" style={{width: \"20em\"}}>\n          <Alert.Heading>Delete category</Alert.Heading>\n          <p>\n            Deleting category cannot be undone. Proceed?\n          </p>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n            <Button onClick={() => setShowAlert(false)}>Cancel</Button>\n            <Button onClick={() => handleDelete(alertCateg)} variant=\"outline-danger\">\n              Proceed\n          </Button>\n          </div>\n        </Alert>\n      </>\n      <div className=\"List\">\n        {categoriesList}\n      </div>\n    </>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/AutoButton.jsx",["182"],"import React, { useState } from 'react';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react';\n\nexport default function SwitchButton(props) {\n  const { setVideoInfo } = props;\n  const [toggle, setToggle] = useState(true);\n  const [ckecked, setChecked] = useState(true)\n\n  const handleOnChange = () => {\n    if(toggle){\n      setToggle(false);\n      setChecked(true);\n      setVideoInfo((prev)=>({...prev, loop: 1}));\n      console.log(\"ON\")\n    }\n    if(!toggle){\n      setToggle(true);\n      setChecked(false);\n      setVideoInfo((prev)=>({...prev, loop: 0}));\n      console.log(\"OFF\")\n    }\n  };\n\n  return (\n\n    <BootstrapSwitchButton\n      // checked={ckecked}\n      onlabel='AUTO'\n      offlabel='OFF'\n      onChange={() => handleOnChange()}\n      onstyle=\"success\"\n    />\n\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/MomentsList.jsx",["183","184","185","186","187","188","189"],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Alert from 'react-bootstrap/Alert';\n\nimport Button from '../shared/Button';\nimport TogglingEditForm from '../shared/TogglingEditForm';\n\nexport default function List(props) {\n\n  const { videoInfo, setVideoInfo, state, setState } = props;\n  const moments = videoInfo.moments;\n\n  //state for the selected moment\n  const [ momName, setMomName ] = useState(\"\");\n\n  //state of delete alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMom, setAlertMom] = useState(null);\n\n  const handleDelete = (momName) => {\n    \n    setShowAlert(false);\n\n    //find moment that is being changed and extract its id\n    const deleted = moments.filter(moment => moment.label === momName)[0];\n    const id = deleted.moment_id;\n\n    //create updated array for back-end\n    const newMoments = moments.filter(moment => moment.moment_id !== id)\n\n    setVideoInfo({...videoInfo, moments: moments.filter(moment => moment.moment_id !== id)})\n\n    //send data to back-end\n    return axios.delete('http://localhost:3001/api/moments', { data: { id } })\n      .then(response => {\n        console.log('client says: delete request sent');\n        console.log(response.data);\n\n      })\n      .catch(err => { console.log('error:', err) })\n\n  };\n\n  const handleAlert = momName => {\n    setAlertMom(momName);\n    setShowAlert(true);\n  };\n\n  const handlePlay = (start, end) => {\n    setVideoInfo({...videoInfo, startTime: start, endTime: end})\n  };\n\n  //convert seconds to human readable times\n  const hrTime = seconds => {\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\n  };\n\n  //render list of moments dynamically\n  const momentsList = moments.map(moment => {\n\n    const key = moment.moment_id;\n    const name = moment.label;\n    const start = hrTime(moment.start_time);\n    const end = hrTime(moment.end_time);\n\n    return (\n\n      <div key={key} style={{border: \"1px solid gray\", padding: \".5em\"}}>\n        <h6>{name}:  {start} - {end}</h6>\n        <Button onClick={() => handlePlay(moment.start_time, moment.end_time)}>Play</Button>\n        <Button onClick={() => handleAlert(name)}>Delete</Button>\n      </div>\n    );\n\n  });\n\n  return (\n    <>\n      <br /><br />\n      <>\n        <Alert show={showAlert} variant=\"danger\" style={{width: \"20em\"}}>\n          <Alert.Heading>Delete moment</Alert.Heading>\n          <p>\n            Deleting moment cannot be undone. Proceed?\n          </p>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n            <Button onClick={() => setShowAlert(false)}>Cancel</Button>\n            <Button onClick={() => handleDelete(alertMom)} variant=\"outline-danger\">\n              Proceed\n          </Button>\n          </div>\n        </Alert>\n      </>\n      <div className=\"List\">\n        {momentsList}\n      </div>\n      <br /><br />\n    </>\n  );\n}",{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":22,"column":8,"nodeType":"196","messageId":"197","endLine":22,"endColumn":22},{"ruleId":"194","severity":1,"message":"198","line":7,"column":9,"nodeType":"196","messageId":"197","endLine":7,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":9,"column":61,"nodeType":"201","messageId":"202","endLine":9,"endColumn":63},{"ruleId":"194","severity":1,"message":"203","line":13,"column":19,"nodeType":"196","messageId":"197","endLine":13,"endColumn":28},{"ruleId":"194","severity":1,"message":"204","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":17},{"ruleId":"194","severity":1,"message":"205","line":3,"column":8,"nodeType":"196","messageId":"197","endLine":3,"endColumn":14},{"ruleId":"194","severity":1,"message":"206","line":2,"column":10,"nodeType":"196","messageId":"197","endLine":2,"endColumn":14},{"ruleId":"207","severity":1,"message":"208","line":81,"column":6,"nodeType":"209","endLine":81,"endColumn":29,"suggestions":"210"},{"ruleId":"194","severity":1,"message":"211","line":21,"column":19,"nodeType":"196","messageId":"197","endLine":21,"endColumn":29},{"ruleId":"194","severity":1,"message":"212","line":24,"column":7,"nodeType":"196","messageId":"197","endLine":24,"endColumn":14},{"ruleId":"194","severity":1,"message":"213","line":34,"column":22,"nodeType":"196","messageId":"197","endLine":34,"endColumn":35},{"ruleId":"199","severity":1,"message":"200","line":60,"column":17,"nodeType":"201","messageId":"202","endLine":60,"endColumn":19},{"ruleId":"214","severity":1,"message":"215","line":103,"column":29,"nodeType":"216","messageId":"217","endLine":103,"endColumn":73,"fix":"218"},{"ruleId":"194","severity":1,"message":"219","line":11,"column":56,"nodeType":"196","messageId":"197","endLine":11,"endColumn":61},{"ruleId":"194","severity":1,"message":"220","line":11,"column":63,"nodeType":"196","messageId":"197","endLine":11,"endColumn":71},{"ruleId":"194","severity":1,"message":"221","line":2,"column":10,"nodeType":"196","messageId":"197","endLine":2,"endColumn":20},{"ruleId":"194","severity":1,"message":"222","line":86,"column":51,"nodeType":"196","messageId":"197","endLine":86,"endColumn":57},{"ruleId":"194","severity":1,"message":"223","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":18},{"ruleId":"224","severity":1,"message":"225","line":23,"column":50,"nodeType":"226","messageId":"227","endLine":23,"endColumn":52},{"ruleId":"194","severity":1,"message":"228","line":34,"column":11,"nodeType":"196","messageId":"197","endLine":34,"endColumn":17},{"ruleId":"194","severity":1,"message":"229","line":1,"column":10,"nodeType":"196","messageId":"197","endLine":1,"endColumn":18},{"ruleId":"194","severity":1,"message":"230","line":1,"column":20,"nodeType":"196","messageId":"197","endLine":1,"endColumn":29},{"ruleId":"194","severity":1,"message":"220","line":7,"column":18,"nodeType":"196","messageId":"197","endLine":7,"endColumn":26},{"ruleId":"194","severity":1,"message":"231","line":7,"column":28,"nodeType":"196","messageId":"197","endLine":7,"endColumn":43},{"ruleId":"194","severity":1,"message":"232","line":7,"column":45,"nodeType":"196","messageId":"197","endLine":7,"endColumn":60},{"ruleId":"194","severity":1,"message":"229","line":1,"column":10,"nodeType":"196","messageId":"197","endLine":1,"endColumn":18},{"ruleId":"194","severity":1,"message":"230","line":1,"column":20,"nodeType":"196","messageId":"197","endLine":1,"endColumn":29},{"ruleId":"194","severity":1,"message":"233","line":7,"column":10,"nodeType":"196","messageId":"197","endLine":7,"endColumn":17},{"ruleId":"194","severity":1,"message":"230","line":1,"column":20,"nodeType":"196","messageId":"197","endLine":1,"endColumn":29},{"ruleId":"194","severity":1,"message":"234","line":6,"column":8,"nodeType":"196","messageId":"197","endLine":6,"endColumn":24},{"ruleId":"194","severity":1,"message":"219","line":10,"column":36,"nodeType":"196","messageId":"197","endLine":10,"endColumn":41},{"ruleId":"194","severity":1,"message":"220","line":10,"column":43,"nodeType":"196","messageId":"197","endLine":10,"endColumn":51},{"ruleId":"194","severity":1,"message":"235","line":14,"column":11,"nodeType":"196","messageId":"197","endLine":14,"endColumn":18},{"ruleId":"194","severity":1,"message":"236","line":14,"column":20,"nodeType":"196","messageId":"197","endLine":14,"endColumn":30},{"ruleId":"194","severity":1,"message":"237","line":29,"column":11,"nodeType":"196","messageId":"197","endLine":29,"endColumn":21},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"no-unused-vars","'EditCategories' is defined but never used.","Identifier","unusedVar","'cookie' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setCookie' is assigned a value but never used.","'SearchBar' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.oldVideo' and 'videoInfo.selectedVideoID'. Either include them or remove the dependency array.","ArrayExpression",["240"],"'setCookies' is assigned a value but never used.","'history' is assigned a value but never used.","'setCategoryId' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property slice.","MemberExpression","unexpectedWhitespace",{"range":"241","text":"242"},"'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'useHistory' is defined but never used.","'errors' is assigned a value but never used.","'InputGroup' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'player' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'onVideoSelected' is assigned a value but never used.","'selectedVideoID' is assigned a value but never used.","'ckecked' is assigned a value but never used.","'TogglingEditForm' is defined but never used.","'momName' is assigned a value but never used.","'setMomName' is assigned a value but never used.","'newMoments' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},[3198,3200],".","Update the dependencies array to be: [props.oldVideo, videoInfo.selectedCat, videoInfo.selectedVideoID]",{"range":"245","text":"246"},[2247,2270],"[props.oldVideo, videoInfo.selectedCat, videoInfo.selectedVideoID]"]