[{"/Users/kelvindt/lighthouse/echo/front-end/src/index.js":"1","/Users/kelvindt/lighthouse/echo/front-end/src/reportWebVitals.js":"2","/Users/kelvindt/lighthouse/echo/front-end/src/App.jsx":"3","/Users/kelvindt/lighthouse/echo/front-end/src/components/Header.jsx":"4","/Users/kelvindt/lighthouse/echo/front-end/src/components/Navbar.jsx":"5","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/Categories.jsx":"6","/Users/kelvindt/lighthouse/echo/front-end/src/components/UserVideosPage/UserVideos.jsx":"7","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/Home.jsx":"8","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditCategories.jsx":"9","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/ShowMoments.jsx":"10","/Users/kelvindt/lighthouse/echo/front-end/src/components/NavbarItem.jsx":"11","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/Save.jsx":"12","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/NewMoment.jsx":"13","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Button.jsx":"14","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/SearchBar.jsx":"15","/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useApplicationData.js":"16","/Users/kelvindt/lighthouse/echo/front-end/src/api/youtube.js":"17","/Users/kelvindt/lighthouse/echo/front-end/src/components/Register/Register.jsx":"18","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/VideoList.jsx":"19","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Video.jsx":"20","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/MomentBar.jsx":"21","/Users/kelvindt/lighthouse/echo/front-end/src/components/VideoPlayer.jsx":"22","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Login.jsx":"23","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Logout.jsx":"24","/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useVisualMode.js":"25","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategories.jsx":"26","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategoriesList.jsx":"27","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/VideoThumbnails.jsx":"28","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/TogglingEditForm.jsx":"29","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/PasteBar.jsx":"30","/Users/kelvindt/lighthouse/echo/front-end/src/components/SearchResults/Videos.jsx":"31","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/EditDeleteListMoments.jsx":"32","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditDeleteListCategs.jsx":"33","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/AutoButton.jsx":"34"},{"size":656,"mtime":1611512224320,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1610678906294,"results":"37","hashOfConfig":"36"},{"size":2749,"mtime":1611512224308,"results":"38","hashOfConfig":"36"},{"size":355,"mtime":1611512224309,"results":"39","hashOfConfig":"36"},{"size":1130,"mtime":1611512224311,"results":"40","hashOfConfig":"36"},{"size":832,"mtime":1611443456713,"results":"41","hashOfConfig":"36"},{"size":2545,"mtime":1611523141070,"results":"42","hashOfConfig":"36"},{"size":612,"mtime":1611523141068,"results":"43","hashOfConfig":"36"},{"size":1976,"mtime":1611355298200,"results":"44","hashOfConfig":"36"},{"size":3424,"mtime":1611523141070,"results":"45","hashOfConfig":"36"},{"size":140,"mtime":1610741729934,"results":"46","hashOfConfig":"36"},{"size":4480,"mtime":1611523141069,"results":"47","hashOfConfig":"36"},{"size":2898,"mtime":1611512224310,"results":"48","hashOfConfig":"36"},{"size":223,"mtime":1611422083964,"results":"49","hashOfConfig":"36"},{"size":1384,"mtime":1611512684014,"results":"50","hashOfConfig":"36"},{"size":5934,"mtime":1611512224315,"results":"51","hashOfConfig":"36"},{"size":234,"mtime":1610907998371,"results":"52","hashOfConfig":"36"},{"size":1712,"mtime":1611215310438,"results":"53","hashOfConfig":"36"},{"size":455,"mtime":1611299361877,"results":"54","hashOfConfig":"36"},{"size":958,"mtime":1611512224315,"results":"55","hashOfConfig":"36"},{"size":1288,"mtime":1611512224312,"results":"56","hashOfConfig":"36"},{"size":2217,"mtime":1611523141071,"results":"57","hashOfConfig":"36"},{"size":1166,"mtime":1611157527459,"results":"58","hashOfConfig":"36"},{"size":231,"mtime":1611157527459,"results":"59","hashOfConfig":"36"},{"size":209,"mtime":1611107989228,"results":"60","hashOfConfig":"36"},{"size":533,"mtime":1611443456714,"results":"61","hashOfConfig":"36"},{"size":1258,"mtime":1611443456714,"results":"62","hashOfConfig":"36"},{"size":1284,"mtime":1611443456715,"results":"63","hashOfConfig":"36"},{"size":2194,"mtime":1611512224313,"results":"64","hashOfConfig":"36"},{"size":1056,"mtime":1611512684013,"results":"65","hashOfConfig":"36"},{"size":144,"mtime":1611293681967,"results":"66","hashOfConfig":"36"},{"size":5023,"mtime":1611512224310,"results":"67","hashOfConfig":"36"},{"size":4350,"mtime":1611355298200,"results":"68","hashOfConfig":"36"},{"size":798,"mtime":1611523141069,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1w2lqaa",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"72"},"/Users/kelvindt/lighthouse/echo/front-end/src/index.js",[],["150","151"],"/Users/kelvindt/lighthouse/echo/front-end/src/reportWebVitals.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/App.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Header.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Navbar.jsx",["152"],"import { Link } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\n\nimport useApplicationData from '../hooks/useApplicationData';\n\nimport NavbarItem from './NavbarItem';\nimport Logout from './Login/Logout';\n\nimport './stylesheets/Navbar.css';\n\nexport default function Navbar(props) {\n\n  const [cookies, setCookie] = useCookies([\"user\"]);\n\n  const { handleLogout } = useApplicationData();\n\n  return (\n\n    <div className=\"Navbar\">\n      <Link to=\"/\">\n        <NavbarItem>Home</NavbarItem>\n      </Link>\n      <Link to=\"/videos\">\n        <NavbarItem>User videos</NavbarItem>\n      </Link>\n      <Link to=\"/categories\">\n        <NavbarItem>User categories</NavbarItem>\n      </Link>\n      <Link to=\"/search\">\n        <NavbarItem>Search results</NavbarItem>\n      </Link>\n      {/* <Link to=\"/videos/id\">\n        <NavbarItem>Show moments</NavbarItem>\n      </Link> */}\n      { cookies.user ?\n        <Link to=\"/\">\n          <Logout onClick={handleLogout}>Log out user {cookies.user}</Logout>\n        </Link> :\n        <>\n          <Link to=\"/register\">\n            <NavbarItem>Register</NavbarItem>\n          </Link>\n          <Link to=\"/login\">\n            <NavbarItem>Log in</NavbarItem>\n          </Link>\n        </>\n      }\n    </div>\n\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/Categories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/UserVideosPage/UserVideos.jsx",["153"],"import { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nimport SearchBar from '../shared/SearchBar';\n\nimport Card from 'react-bootstrap/Card';\nimport Button from '../shared/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nexport default function UserVideos(props) {\n  const videos = props.state.videos;\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertVid, setAlertVid] = useState(null);\n\n\n  const handleAlert = vid => {\n    setAlertVid(vid);\n    setShowAlert(true);\n  };\n\n  const handleDelete = (video) => {\n\n    setShowAlert(false);\n    \n    return axios.delete('http://localhost:3001/api/videos', { params: video.id })\n    .then(response => {\n      console.log('client says: delete request sent');\n      console.log(response.data);\n      props.setState(prev =>({...prev, videos: videos.filter((vid)=> vid.id !== video.id)}))\n    })\n    .catch(err => { console.log('error:', err) })\n\n  };\n\n//------------------------------------------------------------------//\n  const videoList = videos && videos.map((video, index) => {\n\n    const youtubeId = video.link.slice(32, 43);\n    const thumbnail = `https://img.youtube.com/vi/${youtubeId}/mqdefault.jpg`;\n\n    const videoOnClick = () => {\n      props.onVideoSelected(youtubeId);\n      props.setState((prev) => ({ ...prev, oldVideo: true, selectedVidId: video.id }));\n    };\n\n    return (\n\n      <>\n       <Card key={index} className='userVideos' style={{ width: \"30em\" }} onClick={() => videoOnClick()}>\n          <Link to=\"/moments\">\n            <Card.Header>\n              <h6>{video.title}</h6>\n            </Card.Header>\n            <Card.Img variant=\"bottom\" src={thumbnail} alt=\"thumbnail\" />\n          </Link>\n          <Button onClick={()=>handleAlert(video)}>Delete</Button>\n        </Card>\n      </>\n      \n    );\n  });\n\n  return (\n    <>\n      <div className=\"Uservideos\">\n        <h4>All User Videos</h4>\n        {/* <SearchBar /> */}\n        <Alert show={showAlert} variant=\"danger\" style={{width: \"20em\"}}>\n        <Alert.Heading>Delete Video</Alert.Heading>\n        {alertVid && <p>\"{alertVid.title}\"</p>}\n        <p>Will be removed and cannot be undone. Proceed?</p>\n        <hr />\n        <div className=\"d-flex justify-content-end\">\n          <Button onClick={() => setShowAlert(false)}>Cancel</Button>\n          <Button onClick={() => handleDelete(alertVid)} variant=\"outline-danger\">\n            Proceed\n        </Button>\n        </div>\n      </Alert>\n        <ul>{videoList}</ul>\n      </div>\n    </>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/Home.jsx",["154"],"import SearchBar from '../shared/SearchBar';\nimport PasteBar from './PasteBar'\nimport Button from '../shared/Button';\nimport VideoList from '../shared/VideoList';\n\nexport default function Home(props) {\n\n  return (\n\n    <div className=\"Home\">\n      <h3>Welcome message</h3>\n      <h3>Another message</h3>\n\n      <PasteBar setSelectedVideoID={props.setSelectedVideoID} />\n      <SearchBar onSearch={props.onSearch} />\n      <VideoList onVideoSelected={props.onVideoSelected} data={props.data} />\n\n      <form>\n        <input type=\"text\"></input>\n        <Button>Load video</Button>\n      </form>\n    </div>\n\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditCategories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/ShowMoments.jsx",["155","156","157"],"/Users/kelvindt/lighthouse/echo/front-end/src/components/NavbarItem.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/Save.jsx",["158","159"],"import { useState } from 'react';\nimport axios from 'axios';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\n\nexport default function Save({ videoInfo, setVideoInfo, selectedCat, categories, moments, oldVideo, categWithId, selectedVidId, state, setState }) {\n\n  console.log(\"rendering save component: state=\", state )\n  console.log(\"rendering save component: categWithId=\", categWithId )\n  console.log(\"rendering save component: categories=\", categories )\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [vidTitle, setVidTitle] = useState('');\n  const [categoryId, setCategoryId] = useState(null);\n  const onInput = event => {\n    const input = event.target.value;\n    setVidTitle(input);\n    // console.log(vidTitle);\n  };\n\n  const handleTitle = (catergory) => setVideoInfo(prev => ({ ...prev, selectedCat: catergory }));\n\n  //waits for state have values\n  let categoriesDropdown;\n  if (categories) {\n    categoriesDropdown = categories.map((catergory) => {\n      return (\n        <Dropdown.Item onClick={() => handleTitle(catergory)}>{catergory}</Dropdown.Item>\n      );\n    });\n  }\n\n  const newMoments = [\n    { label: \"something\", start_time: 30, end_time: 70 },\n    { label: \"something2\", start_time: 100, end_time: 102 },\n    { label: \"something3\", start_time: 50, end_time: 55 }\n  ];\n\n  const getCatid = () => {\n    let catId;\n    console.log(\"inGetID:\", selectedCat);\n    if(categWithId){\n\n      catId = categWithId.find(categ => categ.name === selectedCat);\n      console.log(\"finderID\", catId);\n      setState((prev)=>({...prev, categoryId: catId.id}));\n    }\n\n  };\n\n  const handleSave = () => {\n\n    console.log(\"handleSave\");\n\n    const categ_id = getCatid();\n    if (!categ_id){\n      getCatid();\n    }\n\n    console.log(\"oldvideo =\", oldVideo);\n\n      if (!vidTitle) {\n        console.log(\"alert title:\", vidTitle, \" catId:\", categoryId);\n        setShowAlert(true);\n      }\n\n    const formatedLink = \"https://www.youtube.com/watch?v=\" + videoInfo.selectedVideoID;\n\n    const videoSaveInfo = { title: vidTitle, link: formatedLink, cat_id: state.categoryId };\n    \n    console.log(\"Sent to DB\",videoSaveInfo)\n\n    if(videoSaveInfo.cat_id){\n      handleClose();\n      return axios.post('/api/videos', { videoSaveInfo })\n        .then((response) => {\n          console.log(\"FEres\", response);\n        });\n    }\n\n  };\n\n  return (\n    <>\n        <Form>\n          <Button variant=\"primary\" onClick={handleShow}>\n            Save video\n        </Button>\n          <Modal\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>Save Video with Moments</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Form>\n                <InputGroup className=\"video_save\" onChange={onInput} >\n                  <InputGroup.Prepend>\n                    <InputGroup.Text id=\"basic-addon1\">Title</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                    placeholder=\"Input Title\"\n                    aria-label=\"Input Title\"\n                    aria-describedby=\"basic-addon1\"\n                  />\n                </InputGroup>\n\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">\n                    {selectedCat}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    {categoriesDropdown}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Form>\n\n              <Alert show={showAlert} variant=\"danger\">\n                Please input Title and Select a Category.\n            </Alert>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n            </Button>\n              <Button variant=\"primary\" onClick={handleSave} >\n                Save\n            </Button>\n            </Modal.Footer>\n          </Modal>\n        </Form>\n    </>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/NewMoment.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Button.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/SearchBar.jsx",["160"],"/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useApplicationData.js",["161"],"import {\n  useState,\n  useEffect\n} from 'react';\n\n//use cookies hook\nimport { useCookies } from \"react-cookie\";\n\nimport axios from 'axios';\n\nimport youtubeApi from '../api/youtube';\n\nconst useApplicationData = () => {\n\n  //initial state\n  const [state, setState] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    error: '',\n    redirect: null,\n    users: null,\n    videos: null,\n    categories: null,\n    videoMetaInfo: [],\n    selectedVideoID: null,\n    startTime: 70,\n    endTime: 100,\n    videoDuration: null,\n    oldVideo: false,\n    catRedirect: null\n  });\n\n  //set initial cookie\n  const [cookies, setCookie, removeCookie] = useCookies([\"user\"]);\n\n  //extracts all users from the DB + connected videos and categories\n  useEffect(() => {\n\n    //stops the axios calls from happening when user is not logged in\n    if (!cookies.user) {\n      return null;\n    }\n\n    //promise.all to call all data we need at the same time\n    Promise.all([\n      axios.get('api/users'),\n      axios.get('api/videos'),\n      axios.get('api/categories'),\n    ])\n    .then(all => {\n\n      //'all' comes back as an array of responses from the axios calls\n      // console.log('users:', all[0].data);\n      console.log('videos:', all[1].data.response);\n      // console.log('categories:', all[2].data)\n      // const categResponse = all[2].data;\n      const categNames = all[2].data.map(item => item.name);\n      \n      //set current state with axios calls data\n      setState(prev => ({...prev, users: all[0].data, videos: all[1].data.response, categories: categNames, categWithId: all[2].data}))\n      \n    })\n    .catch((err) => console.log(err));\n\n  }, [cookies.user]);   //<-- only renders when user is present\n\n  //handles input from log in and register forms dynamically\n  const handleFormChange = event => {\n\n    const input = event.target.value;\n    const fieldName = event.target.name;\n\n    setState({\n      ...state,\n      [fieldName]: input\n    });\n\n  };\n\n  const handleRegisterSubmit = () => {\n    \n    //deconstruct values needed from state\n    const { firstName, lastName, email, password, errors } = state;\n    let validForm = true;\n    \n    //if any of the inputs are empty, set error state\n    if (!firstName || !lastName || !email || !password) {\n\n      validForm = false;\n      setState({...state, error: 'Fields cannot be empty!'});\n\n    }\n\n    if (validForm) {\n      //reset error state\n      setState({...state, error: ''});\n\n      //build input object to send to back-end\n      const userInput = {\n        firstName,\n        lastName,\n        email,\n        password\n      };\n\n      //send data to back-end\n      return axios.post('http://localhost:3001/register', { userInput })\n        .then(response => {\n\n            //if server sends response.msg, user exists in DB\n            const userExists = response.data.msg\n\n            //if user exists set state error\n            if (userExists) {\n              setState({...state, error: userExists});\n\n            } else {\n              console.log('user created, id:', response.data.id);\n              setCookie(\"user\", response.data.id, {\n                path: \"/\"\n              });\n              setState({...state, redirect: '/'});\n            }\n        })\n        .catch(err => {console.log(err)})\n    }\n  }\n\n  const handleLoginSubmit = () => {\n    \n    //deconstruct values needed from state\n    const { email, password } = state;\n    let validForm = true;\n    \n    //if any of the inputs are empty, set error state\n    if (!email || !password) {\n\n      validForm = false;\n      setState({...state, error: 'Fields cannot be empty!'});\n\n    }\n\n    if (validForm) {\n      //reset error state\n      setState({...state, error: ''});\n\n      //build input object to send to back-end\n      const loginInput = {\n        email,\n        password\n      };\n\n      //send data to back-end\n      return axios.post('http://localhost:3001/login', { loginInput })\n        .then(response => {\n\n            //if server sends response.msg, user exists in DB\n            const noUser = response.data.msg\n\n            //if user exists set state error\n            if (noUser) {\n              setState({...state, error: noUser});\n\n            } else {\n\n              console.log('user logged in, id:', response.data.id);\n              setCookie(\"user\", response.data.id, {\n                path: \"/\"\n              });\n              setState({...state, redirect: '/'});\n            }\n        })\n        .catch(err => {console.log('error:', err)})\n    }\n  }\n\n  const handleLogout = () => {\n    //reset cookie when user logs out\n    removeCookie(\"user\", { path: \"/\"});\n    console.log('user logged out');\n  }\n\n  const onVideoSelected = videoId => {\n    setState((prev)=>({ ...prev, selectedVideoID:videoId, oldVideo: false }))\n  }\n\n  const onSearch = async keyword => {\n    const response = await youtubeApi.get(\"/search\",{\n      params:{\n        q:keyword\n      }\n    })\n\n    console.log(response.data)\n\n    setState({\n      ...state,\n      videoMetaInfo: response.data.items,\n      selectedVideoID: response.data.items[0].id.videoId\n    })\n\n    console.log(state)\n  }\n\n  // const momentsBySelectedVid = (selectedVideoID) => {\n  \n  //   if(selectedVideoID) {\n  //     axios.get('http://localhost:3001/api/moments/', {\n  //       params: {selectedVideoID},\n  //       withCredentials: true\n  //     })\n  //     .then((response)=>{\n  //       console.log(\"in USEapp DB result\",response)\n  //       console.log('info sent to backend')\n  //       //setState({..state, myInfo: content})\n  //     })\n  //     .catch(err => console.log(err));\n  //   }\n  // };\n\n  const setSelectedVideoID = (videoID) =>{\n    setState((prev)=>({...prev, selectedVideoID: videoID}));\n  };\n  \n  return { state, cookies, handleFormChange, handleRegisterSubmit, handleLoginSubmit, onVideoSelected, onSearch, handleLogout, setState, setSelectedVideoID }\n\n};\n\nexport default useApplicationData;","/Users/kelvindt/lighthouse/echo/front-end/src/api/youtube.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Register/Register.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/VideoList.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/Video.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/MomentBar.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/VideoPlayer.jsx",["162"],"import { useState } from 'react';\nimport YouTube from 'react-youtube';\nimport Alert from 'react-bootstrap/Alert';\n\n\nexport default function YTplayer(props) {\n\n  const { state, setState } = props;\n\n  const [show, setShow] = useState(false);\n\n  const videoOnReady=(event) =>{\n    // access to player in all event handlers via event.target\n    const player = event.target;\n    player.playVideo()\n    player.seekTo(props.videoInfo.startTime, true)\n    \n    player.setLoop(true)\n    console.log(\"Video Duration\",player.getDuration())\n    let vd = player.getDuration()\n    //set alert with duration is null\n    if (vd <= 0) {\n      setShow(true)\n    };\n\n    setState({...state, videoDuration: vd});\n\n    props.setVideoInfo(prev=>({...prev, duration: vd, defaultEnd: vd}))\n    \n  }\n\n  const videoOnPlay=(event) =>{\n    // access to player in all event handlers via event.target\n    const player = event.target;\n  }\n\n  const videoOnEnd=(event) =>{\n    // access to player in all event handlers via event.target\n    const player = event.target;\n    player.seekTo(props.videoInfo.startTime, true)\n    //stops the autoplay\n    if(props.videoInfo.loop === 0){\n      player.pauseVideo()\n    }\n  };\n\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: props.videoInfo.autoplay,\n      // autoplay: 1,\n      loop: props.videoInfo.loop,\n      start: props.videoInfo.startTime,\n      end: props.videoInfo.endTime\n\n    },\n  };\n\n  if (show) {\n    return (\n      <div>\n        <Alert variant=\"warning\" onClose={() => setShow(false)} dismissible>\n          <Alert.Heading>Video is a Live Stream</Alert.Heading>\n          <p>\n            Sorry, Moment actions will not work with Live Broadcast.\n          </p>\n        </Alert>\n        <YouTube \n          videoId={props.videoInfo.selectedVideoID} \n          opts={opts} \n          onReady={videoOnReady}\n          onPlay={videoOnPlay}\n          onEnd={videoOnEnd}\n        />\n      </div>\n    );\n  }\n\n  return (\n\n    <YouTube \n      videoId={props.videoInfo.selectedVideoID} \n      opts={opts} \n      onReady={videoOnReady}\n      onPlay={videoOnPlay}\n      onEnd={videoOnEnd}\n    />\n  );\n}\n","/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Login.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Login/Logout.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/hooks/useVisualMode.js",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategories.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/ShowCategoriesList.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/VideoThumbnails.jsx",["163","164","165","166","167"],"import { useState } from 'react';\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\n\nexport default function VideoThumbnails(props) {\n\n  const { state, setState, onVideoSelected } = props;\n  let history = useHistory();\n\n  const thumbnails = state.videos\n    .filter(video => video.cat_name === props.category)\n    .map((video, i) => {\n      \n      const youtubeId = video.link.slice(32, 43);\n      const thumbnail = `https://img.youtube.com/vi/${youtubeId}/mqdefault.jpg`;\n\n      const videoOnClick = () => {\n        // props.onVideoSelected(youtubeId);\n        setState((prev) => ({ ...prev, oldVideo: true, selectedVidId: youtubeId }));\n        history.push('/moments', { update: true })\n\n      };\n  \n\n      //render each video detail\n      return (\n          <Card key={i} style={{width: \"30em\"}} onClick={()=> videoOnClick()} >\n            {/* <Link to=\"/moments\"> */}\n              <Card.Header>\n                <h6>{video.title}</h6>\n              </Card.Header>\n              <Card.Img variant=\"bottom\" src={thumbnail} alt=\"thumbnail\" />\n            {/* </Link> */}\n          </Card>\n      )\n  });\n\n  //render list based on videos existence\n  return (\n      <div className=\"VideoThumbnails\">\n        {thumbnails.length > 0 ? thumbnails : <p>Category empty, add some videos to see them here!</p>}\n      </div>\n  )\n};","/Users/kelvindt/lighthouse/echo/front-end/src/components/shared/TogglingEditForm.jsx",["168","169"],"import { useState } from 'react';\n\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport Button from './Button';\n\nexport default function TogglingEditForm(props) {\n\n  const { interval, setInterval } = props;\n  const [ start, setStart ] = useState(props.start);\n  const [ end, setEnd ] = useState(props.end);\n  const [ timeAlert, setTimeAlert ] = useState(false);\n  // console.log('start :', start);\n  // console.log('end :', end);\n\n  const handleStartChange = e => {\n\n    setStart(e.target.value);\n    const newStart = e.target.value;\n    if (!props.onMoments) {setInterval({...interval, start: newStart})};\n\n    if (e.target.value.length < 8 || e.target.value.length > 8) {\n      setTimeAlert(true)\n\n    } else if (e.target.value.length === 8) {\n\n      setTimeAlert(false)\n    };\n\n  };\n\n  const handleEndChange = e => {\n\n    setEnd(e.target.value);\n    const newEnd = e.target.value;\n    if (!props.onMoments) {setInterval({...interval, end: newEnd})};\n\n    if (e.target.value.length < 8 || e.target.value.length > 8) {\n      setTimeAlert(true)\n\n    } else if (e.target.value.length === 8) {\n\n      setTimeAlert(false)\n    };\n\n  };\n\n  return (\n    <>\n    {timeAlert && <small>Time needs to be in hh:mm:ss format!</small>}\n      <InputGroup className=\"mb-3\">\n        <FormControl\n          aria-describedby=\"basic-addon2\"\n          placeholder={props.placeholder}\n          value={props.value}\n          name={props.name}\n          onChange={props.onChange}\n        />\n        {props.onMoments && (\n          <>\n            <FormControl\n              value={props.start}\n              name=\"start-time\"\n              onChange={(e) => handleStartChange(e)}\n            />\n            <FormControl\n              value={props.end}\n              name=\"end-time\"\n              onChange={(e) => handleEndChange(e)}\n            />\n          </>\n        )}\n        <InputGroup.Append>\n          <Button variant=\"outline-secondary\" onClick={props.onSave} disabled={timeAlert}>Save</Button>\n          <Button variant=\"outline-secondary\" onClick={props.onCancel}>Cancel</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </>\n  );\n};","/Users/kelvindt/lighthouse/echo/front-end/src/components/HomePage/PasteBar.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/SearchResults/Videos.jsx",[],"/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/EditDeleteListMoments.jsx",["170","171","172","173","174"],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Alert from 'react-bootstrap/Alert';\n\nimport Button from '../shared/Button';\nimport TogglingEditForm from '../shared/TogglingEditForm';\n\nexport default function List(props) {\n\n\n  const { moments, state } = props;\n  console.log('moments :', moments);\n\n  //state for the toggling form\n  const [ momName, setMomName ] = useState(\"\");\n  const [ editMode, setEditMode ] = useState(null);\n\n  //sets edit mode to current form and value to name extracted from state\n  const setMode = (key, mom) => {\n    setEditMode(key);\n    setMomName(mom);\n  };\n\n  //state of delete alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertIndex, setAlertIndex] = useState(null);\n\n  const handleSave = (newValue, oldValue) => {\n    \n    //find moment that is being changed\n\n    //extract its id\n\n    //put new value in\n\n    //send to backend update request\n      //set state to new moments\n\n\n  };\n\n  //render list of moments dynamically\n  const momentsList = moments.map(moment => {\n\n    const key = moment.moment_id;\n    const name = moment.label;\n\n    return (\n\n      <div key={key}>\n        {/* show moment name when edit mode is not active for current element */}\n        {editMode !== key && name}\n        {/* on edit mode active for current element show edit form */}\n        {editMode === key ? (\n          <TogglingEditForm\n            value={momName}\n            name=\"moment-name\"\n            placeholder=\"Moment name\"\n            onCancel={() => setEditMode(null)}\n            onChange={(e) => setMomName(e.target.value)}\n            onSave={(e) => handleSave(momName, name)}\n          />\n        ) :\n          // else show the buttons\n          (<>\n            <Button onClick={() => setMode(key, name)} children={'Edit'} />\n            {/* {!showAlert && <Button onClick={() => handleAlert(name)}>Delete</Button>} */}\n          </>)\n        }\n      </div>\n    );\n\n  });\n\n  return (\n    <>\n      <br /><br />\n      <>\n        <Alert show={showAlert} variant=\"danger\" style={{width: \"20em\"}}>\n          <Alert.Heading>Delete moment</Alert.Heading>\n          <p>\n            Deleting moment cannot be undone. Proceed?\n          </p>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n            <Button onClick={() => setShowAlert(false)}>Cancel</Button>\n            <Button onClick={() => console.log('delete clicked')} variant=\"outline-danger\">\n              Proceed\n          </Button>\n          </div>\n        </Alert>\n      </>\n      <div className=\"List\">\n        {momentsList}\n      </div>\n      <br /><br />\n    </>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/Categories/EditDeleteListCategs.jsx",["175"],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Alert from 'react-bootstrap/Alert';\n\nimport Button from '../shared/Button';\nimport TogglingEditForm from '../shared/TogglingEditForm';\n\nexport default function List(props) {\n\n  //using app data state to get categories\n  const { state, setState } = props;\n\n  //keeping edit form state local to avoid too much rendering\n  const [catName, setCatName] = useState(\"\");\n  const [editMode, setEditMode] = useState(null);\n\n  //sets edit mode to current form and value to name extracted from state\n  const setMode = (i, cat) => {\n    setEditMode(i);\n    setCatName(cat);\n  };\n\n  //state of delete alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertCateg, setAlertCateg] = useState(null);\n\n  const handleSave = (newValue, oldValue) => {\n\n    //shallow copy of state categories\n    const categ = [...state.categories];\n    const categWithIds = [...state.categWithId];\n\n    //get index of value being changed\n    const oldIndex = categ.indexOf(oldValue);\n\n    //change old value at index with new value\n    categ[oldIndex] = newValue;\n\n    //set state to new list of categories\n    setState({ ...state, categories: categ });\n\n    //extract id of current category to pass to back-end\n    let id;\n    categWithIds.forEach(item => {\n\n      if(item.name === oldValue) {\n        id = item.id;\n      }\n    })\n\n    //send new name and index to back-end\n    return axios.put('http://localhost:3001/api/categories', { newValue, id })\n      .then(response => {\n        setEditMode(null);\n\n        console.log('client says: updated cat name sent');\n        console.log(response.data);\n      })\n      .catch(err => { console.log('error:', err) })\n\n  };\n\n  const handleDelete = (categName) => {\n    setShowAlert(false);\n\n    //shallow copy of categories with ids\n    const categWithIds = [...state.categWithId];\n    console.log('categWithIds :', categWithIds);\n\n    //extract id of current category to pass to back-end\n    //!!on refactor of code, this can be moved into a helper!!\n    let id;\n    categWithIds.forEach(item => {\n      console.log('item :', item.name);\n      console.log('categName :', categName);\n      \n      \n      if(item.name === categName) {\n        id = item.id;\n      }\n    })\n    console.log('id :', id);\n\n\n    //send data to back-end\n    return axios.delete('http://localhost:3001/api/categories', { data: { id } })\n      .then(response => {\n        console.log('client says: delete request sent');\n        console.log(response.data);\n        setState({...state, categories: state.categories.filter(categ => !categ.includes(categName))})\n      })\n      .catch(err => { console.log('error:', err) })\n\n  };\n\n  const handleAlert = (categName) => {\n    setAlertCateg(categName);\n    setShowAlert(true);\n  };\n\n  const categoriesList = state.categories && state.categories.map((name, i) => {\n\n    return (\n\n      <div key={i}>\n        {/* show category name when edit mode is not active for current element */}\n        {editMode !== i && name}\n        {/* on edit mode active for current element show edit form */}\n        {editMode === i ? (\n          <TogglingEditForm\n            value={catName}\n            name=\"cat-name\"\n            placeholder=\"Category name\"\n            onCancel={() => setEditMode(null)}\n            onChange={(e) => setCatName(e.target.value)}\n            onSave={(e) => handleSave(catName, name)}\n          />\n        ) :\n          // else show the buttons\n          (<>\n            <Button onClick={() => setMode(i, name)} children={'Edit'} />\n            {!showAlert && <Button onClick={() => handleAlert(name)}>Delete</Button>}\n          </>)\n        }\n      </div>\n    );\n\n  });\n\n  return (\n    <>\n      <>\n        <Alert show={showAlert} variant=\"danger\" style={{width: \"20em\"}}>\n          <Alert.Heading>Delete category</Alert.Heading>\n          <p>\n            Deleting category cannot be undone. Proceed?\n          </p>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n            <Button onClick={() => setShowAlert(false)}>Cancel</Button>\n            <Button onClick={() => handleDelete(alertCateg)} variant=\"outline-danger\">\n              Proceed\n          </Button>\n          </div>\n        </Alert>\n      </>\n      <div className=\"List\">\n        {categoriesList}\n      </div>\n    </>\n  );\n}","/Users/kelvindt/lighthouse/echo/front-end/src/components/MomentsPage/AutoButton.jsx",["176"],"import React, { useState } from 'react';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react';\n\nexport default function SwitchButton(props) {\n  const { setVideoInfo } = props;\n  const [toggle, setToggle] = useState(true);\n  const [ckecked, setChecked] = useState(true)\n\n  const handleOnChange = () => {\n    if(toggle){\n      setToggle(false);\n      setChecked(true);\n      setVideoInfo((prev)=>({...prev, loop: 1}));\n      console.log(\"ON\")\n    }\n    if(!toggle){\n      setToggle(true);\n      setChecked(false);\n      setVideoInfo((prev)=>({...prev, loop: 0}));\n      console.log(\"OFF\")\n    }\n  };\n\n  return (\n\n    <BootstrapSwitchButton\n      // checked={ckecked}\n      onlabel='AUTO'\n      offlabel='OFF'\n      onChange={() => handleOnChange()}\n      onstyle=\"success\"\n    />\n\n  );\n}",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":13,"column":19,"nodeType":"183","messageId":"184","endLine":13,"endColumn":28},{"ruleId":"181","severity":1,"message":"185","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":17},{"ruleId":"181","severity":1,"message":"186","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":14},{"ruleId":"181","severity":1,"message":"187","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":14},{"ruleId":"181","severity":1,"message":"186","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":14},{"ruleId":"188","severity":1,"message":"189","line":82,"column":8,"nodeType":"190","endLine":82,"endColumn":31,"suggestions":"191"},{"ruleId":"181","severity":1,"message":"192","line":21,"column":19,"nodeType":"183","messageId":"184","endLine":21,"endColumn":29},{"ruleId":"181","severity":1,"message":"193","line":34,"column":22,"nodeType":"183","messageId":"184","endLine":34,"endColumn":35},{"ruleId":"181","severity":1,"message":"194","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":20},{"ruleId":"181","severity":1,"message":"195","line":85,"column":51,"nodeType":"183","messageId":"184","endLine":85,"endColumn":57},{"ruleId":"181","severity":1,"message":"196","line":34,"column":11,"nodeType":"183","messageId":"184","endLine":34,"endColumn":17},{"ruleId":"181","severity":1,"message":"197","line":1,"column":10,"nodeType":"183","messageId":"184","endLine":1,"endColumn":18},{"ruleId":"181","severity":1,"message":"198","line":1,"column":20,"nodeType":"183","messageId":"184","endLine":1,"endColumn":29},{"ruleId":"181","severity":1,"message":"199","line":7,"column":18,"nodeType":"183","messageId":"184","endLine":7,"endColumn":26},{"ruleId":"181","severity":1,"message":"200","line":7,"column":28,"nodeType":"183","messageId":"184","endLine":7,"endColumn":43},{"ruleId":"181","severity":1,"message":"201","line":7,"column":45,"nodeType":"183","messageId":"184","endLine":7,"endColumn":60},{"ruleId":"181","severity":1,"message":"202","line":11,"column":11,"nodeType":"183","messageId":"184","endLine":11,"endColumn":16},{"ruleId":"181","severity":1,"message":"203","line":12,"column":11,"nodeType":"183","messageId":"184","endLine":12,"endColumn":14},{"ruleId":"181","severity":1,"message":"198","line":1,"column":20,"nodeType":"183","messageId":"184","endLine":1,"endColumn":29},{"ruleId":"181","severity":1,"message":"204","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":13},{"ruleId":"181","severity":1,"message":"205","line":11,"column":20,"nodeType":"183","messageId":"184","endLine":11,"endColumn":25},{"ruleId":"181","severity":1,"message":"206","line":26,"column":10,"nodeType":"183","messageId":"184","endLine":26,"endColumn":20},{"ruleId":"181","severity":1,"message":"207","line":26,"column":22,"nodeType":"183","messageId":"184","endLine":26,"endColumn":35},{"ruleId":"181","severity":1,"message":"198","line":1,"column":20,"nodeType":"183","messageId":"184","endLine":1,"endColumn":29},{"ruleId":"181","severity":1,"message":"208","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":17},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar","'SearchBar' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.oldVideo' and 'videoInfo.selectedVideoID'. Either include them or remove the dependency array.","ArrayExpression",["211"],"'setCookies' is assigned a value but never used.","'setCategoryId' is assigned a value but never used.","'useHistory' is defined but never used.","'errors' is assigned a value but never used.","'player' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'setState' is assigned a value but never used.","'onVideoSelected' is assigned a value but never used.","'selectedVideoID' is assigned a value but never used.","'start' is assigned a value but never used.","'end' is assigned a value but never used.","'axios' is defined but never used.","'state' is assigned a value but never used.","'alertIndex' is assigned a value but never used.","'setAlertIndex' is assigned a value but never used.","'ckecked' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},"Update the dependencies array to be: [props.oldVideo, videoInfo.selectedCat, videoInfo.selectedVideoID]",{"range":"214","text":"215"},[2291,2314],"[props.oldVideo, videoInfo.selectedCat, videoInfo.selectedVideoID]"]